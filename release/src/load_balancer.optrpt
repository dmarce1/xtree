
Begin optimization report for: boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::match_type, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type>::invoke(boost::detail::function::function_buffer &, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(118,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/finder.hpp(578,29) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::load_array_type<hpx::util::portable_binary_iarchive>::invoke<int [3]>(hpx::util::portable_binary_iarchive &, int (&)[3])

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_iarchive.hpp(302,44) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(591,12)
   remark #15382: vectorization support: call to function _ZN3hpx4util24portable_binary_iarchive9load_implERlc cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_iarchive.hpp(136,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between l.459356 line 135 and l.459356 line 136
   remark #15346: vector dependence: assumed OUTPUT dependence between l.459356 line 136 and l.459356 line 135
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, std::array<int, 3UL>>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, std::array<int, 3UL>> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(285,32) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZN3hpx4util24portable_binary_oarchive9save_implElc cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(126,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char>>::overflow(boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char>> *, boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char>>::int_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/alt_sstream_impl.hpp(252,17)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::basic_format(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/streambuf(463,7) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(28,35)
   remark #15389: vectorization support: reference this_385700 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 3
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 1.140 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::~vector(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::parse(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *, const boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::string_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(367,9) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(421,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(60,19) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(421,25)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(430,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(479,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this line 480 and argN_ line 481
   remark #15346: vector dependence: assumed FLOW dependence between argN_ line 481 and this line 480
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(479,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(488,16)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::parse_printf_directive<char, std::char_traits<char>, std::allocator<char>, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator, std::ctype<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator &, boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, const std::ctype<char> &, std::size_t, unsigned char)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(76,26) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(156,45)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(60,19) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(231,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(60,19) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(244,52)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(254,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(187,9)
   remark #15535: loop was not vectorized: loop contains switch statement. Consider using if-else statement.   [ /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(189,13) ]
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::str2int<std::streamsize, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator, std::ctype<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator &, std::streamsize &, const std::ctype<char> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(76,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::make_or_reuse_data(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(121,24)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(123,13)
   remark #15382: vectorization support: call to function _ZNSs6resizeEmc cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(763,15) ]
   remark #15382: vectorization support: call to function _ZNSs6resizeEmc cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(763,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this line 124 and  line 763
   remark #15346: vector dependence: assumed FLOW dependence between  line 763 and this line 124
LOOP END
===========================================================================

Begin optimization report for: std::vector<bool, std::allocator<bool>>::_M_fill_insert(std::vector<bool, std::allocator<bool>> *, std::vector<bool, std::allocator<bool>>::iterator, std::vector<bool, std::allocator<bool>>::size_type, bool)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(542,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(717,51)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_offset line 160 and _M_offset line 158
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15389: vectorization support: reference __first_255384 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(394,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(727,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 87 and _M_p line 89
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 89 and _M_p line 87
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15389: vectorization support: reference __first_255384 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(394,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(730,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 87 and _M_p line 89
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 89 and _M_p line 87
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::_M_fill_insert(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::iterator, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(459,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(557,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(464,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(466,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(476,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(480,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(522,8)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer>(std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer, std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between U45 line 249 and __first line 327
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::_M_fill_assign(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(229,2)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(232,4)
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSt6localeaSERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(674,80) ]
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function _ZNSt6localeC1ERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(465,50) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between this_387526 line 64 and this_387526 line 466
   remark #15346: vector dependence: assumed OUTPUT dependence between __first_387517 line 466 and __first_387517 line 64
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(233,4)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(748,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(239,25)
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSt6localeaSERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(674,80) ]
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function _ZNSt6localeC1ERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(465,50) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between this_387526 line 64 and this_387526 line 466
   remark #15346: vector dependence: assumed OUTPUT dependence between __first_387620 line 466 and __first_387620 line 64
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(239,9)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::vector(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(292,9)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::~basic_format(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_fwd.hpp(25,11)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 327 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_383654 line 249 and __first_383654 line 327
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::str(boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::string_type *, const boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(257,29) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(228,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between sz.395469 line 263 and sz.395469 line 259
   remark #15346: vector dependence: assumed ANTI dependence between sz.395469 line 259 and sz.395469 line 263
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(230,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::unique_lock<hpx::lcos::local::spinlock>::lock(boost::unique_lock<hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::feed_impl<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>, std::allocator<char>, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &>(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> &, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(137,41) inlined into /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(294,31)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(145,30) inlined into /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(294,31)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(283,48) inlined into /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(295,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::section::~section(hpx::util::section *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/ini.hpp(70,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/ini.hpp(70,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_type, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type, std::_Select1st<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type>, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_compare, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_type, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type, std::_Select1st<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type>, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_compare, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_type, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type, std::_Select1st<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type>, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_compare, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_type, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type, std::_Select1st<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type>, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_compare, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_type, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type, std::_Select1st<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type>, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_compare, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_type, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type, std::_Select1st<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type>, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_compare, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::distribute<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>, std::allocator<char>, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &>(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> &, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(283,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::put<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>, std::allocator<char>, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &>(const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &, const boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> &, boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::string_type &, boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::internal_streambuf_t &, boost::io::detail::locale_t *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(255,29)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<increment_server_action>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
      remark #15389: vectorization support: reference __first_422981 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<decrement_server_action>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
      remark #15389: vectorization support: reference __first_422981 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::detail::promise<void, hpx::util::unused_type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::detail::promise<void, hpx::util::unused_type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::event<hpx::lcos::local::spinlock>::set(hpx::lcos::local::detail::event<hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(64,52)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<int32_t>::type, hpx::actions::extract_action<increment_server_action, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<int32_t>::type, hpx::actions::extract_action<increment_server_action, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<void, hpx::util::unused_type>::requires_delete(hpx::lcos::detail::promise<void, hpx::util::unused_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(388,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(395,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(393,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::unique_lock<hpx::naming::gid_type>::lock(boost::unique_lock<hpx::naming::gid_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/naming/name.hpp(278,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::unique_lock<hpx::naming::gid_type>::~unique_lock(boost::unique_lock<hpx::naming::gid_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(331,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<int32_t>::type, hpx::actions::extract_action<increment_server_action, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<int32_t>::type, hpx::actions::extract_action<increment_server_action, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<const std::vector<std::string, std::allocator<std::string>>::value_type &>(std::vector<std::string, std::allocator<std::string>> *, const std::vector<std::string, std::allocator<std::string>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(433,2)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_301127 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_301127 line 547
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::move_iterator<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>::value_type>(std::vector<std::string, std::allocator<std::string>> *, std::move_iterator<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>::value_type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(433,2)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_301127 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_301127 line 547
LOOP END
===========================================================================

Begin optimization report for: boost::assign::list_inserter<boost::assign_detail::call_push_back<std::vector<std::string, std::allocator<std::string>>>, std::string>::operator()<std::basic_string<char, std::char_traits<char>, std::allocator<char>>>(boost::assign::list_inserter<boost::assign_detail::call_push_back<std::vector<std::string, std::allocator<std::string>>>, std::string> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/boost/assign/list_inserter.hpp(272,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/assign/list_inserter.hpp(272,20)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 547 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between __first_301127 line 249 and __first_301127 line 547
LOOP END
===========================================================================

Begin optimization report for: boost::algorithm::iter_split<std::vector<std::string, std::allocator<std::string>>, const char *, boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(std::vector<std::string, std::allocator<std::string>> &, const char *&, boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/iter_find.hpp(181,13)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __mem_4283 line 547 and __mem_4283 line 68
   remark #15346: vector dependence: assumed FLOW dependence between __first_301127 line 68 and __first_301127 line 547
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_301127 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_301127 line 547
LOOP END
===========================================================================

Begin optimization report for: boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<boost::range_detail::range_const_iterator<boost::remove_reference<char [2]>::type>::type>>(boost::algorithm::detail::is_any_ofF<char> *, const boost::iterator_range<boost::range_detail::range_const_iterator<boost::remove_reference<char [2]>::type>::type> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/predefined_ops.h(42,26) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1901,4) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1904,4) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(329,46) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1674,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between Storage line 1675 and Storage line 135
   remark #15346: vector dependence: assumed FLOW dependence between Storage line 135 and Storage line 1675

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(393,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1844,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15382: vectorization support: call to function __builtin_memmove cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(578,6) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __last_550675 line 1846 and __last_550675 line 1833
   remark #15346: vector dependence: assumed FLOW dependence between __i.550609 line 1833 and __i.550609 line 1846

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1827,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1865,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __last_550675 line 1824 and __last_550675 line 1833
   remark #15346: vector dependence: assumed FLOW dependence between __i.550697 line 1833 and __i.550697 line 1824

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1827,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1844,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15382: vectorization support: call to function __builtin_memmove cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(578,6) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __last_550675 line 1846 and __last_550675 line 1833
   remark #15346: vector dependence: assumed FLOW dependence between __i.550609 line 1833 and __i.550609 line 1846

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1827,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1943,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::__introsort_loop<boost::algorithm::detail::is_any_ofF<char>::set_value_type *, long, __gnu_cxx::__ops::_Iter_less_iter>(boost::algorithm::detail::is_any_ofF<char>::set_value_type *, boost::algorithm::detail::is_any_ofF<char>::set_value_type *, long, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/predefined_ops.h(42,26) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1952,6)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1901,4) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1952,6)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1904,4) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1952,6)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(329,46) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1674,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 1675 and __first line 135
   remark #15346: vector dependence: assumed FLOW dependence between __first line 135 and __first line 1675

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(393,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1943,7)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::scoped_unlock<hpx::lcos::local::spinlock::scoped_lock>::~scoped_unlock(hpx::util::scoped_unlock<hpx::lcos::local::spinlock::scoped_lock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/scoped_unlock.hpp(24,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::print(xtree::load_balancer *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/load_balancer.cpp(53,28)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::load_balancer(xtree::load_balancer *, xtree::load_balancer::component_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into ../src/load_balancer.cpp(26,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(27,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(26,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>>::~vector(std::vector<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::~vector(std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::load_balancer(xtree::load_balancer *const, xtree::load_balancer::component_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into ../src/load_balancer.cpp(18,16)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(18,16)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(18,16)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::~load_balancer(xtree::load_balancer *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into ../src/load_balancer.cpp(36,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(36,1)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::~load_balancer(xtree::load_balancer *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into ../src/load_balancer.cpp(33,16)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(33,16)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::~load_balancer(xtree::load_balancer *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into ../src/load_balancer.cpp(33,16)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/load_balancer.cpp(33,16)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<increment_server_action, void>::type, boost::mpl::identity<int32_t>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::load_balancer::increment_server, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<increment_server_action, void>::type, boost::mpl::identity<int32_t>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::load_balancer::increment_server, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<increment_server_action, void>::type, boost::mpl::identity<int32_t>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::load_balancer::increment_server, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<increment_server_action, void>::type, boost::mpl::identity<int32_t>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::load_balancer::increment_server, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::call_once<void (*)()>(hpx::lcos::local::once_flag &, void (*)())

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(82,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(82,25)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(82,25)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<int32_t>::type, hpx::actions::extract_action<increment_server_action, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<decrement_server_action, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::load_balancer::decrement_server, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<uint32_t, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<decrement_server_action, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::load_balancer::decrement_server, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, uint32_t &&, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(85,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<decrement_server_action, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::load_balancer::decrement_server, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<uint32_t, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<decrement_server_action, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::load_balancer::decrement_server, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, uint32_t &&, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(95,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::detail::promise<void, hpx::util::unused_type>, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::increment_server(xtree::load_balancer *, const xtree::location<3> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/load_balancer.cpp(68,28)
   remark #15300: LOOP WAS VECTORIZED
   remark #15460: masked strided loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 35 
   remark #15477: vector loop cost: 31.000 
   remark #15478: estimated potential speedup: 1.120 
   remark #15479: lightweight vector operations: 10 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(68,28)
<Remainder>
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(75,28)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(81,42)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/load_balancer.cpp(83,14)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/location.hpp(87,3) inlined into ../src/load_balancer.cpp(87,18)
         remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
      LOOP END

      LOOP BEGIN at ../src/location.hpp(87,3) inlined into ../src/load_balancer.cpp(94,18)
         remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
      LOOP END

      LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/load_balancer.cpp(84,19)
         remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
         remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 2 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 0.600 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/indexer.hpp(96,3) inlined into ../src/load_balancer.cpp(85,8)
         remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(97,10) ]
         remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(97,10) ]
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 2 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 0.600 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/location.hpp(97,3) inlined into ../src/load_balancer.cpp(88,27)
         remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(98,12) ]
         remark #15389: vectorization support: reference this_loc has unaligned access   [ ../src/location.hpp(98,12) ]
         remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(98,12) ]
         remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(98,12) ]
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 4.500 
         remark #15478: estimated potential speedup: 0.540 
         remark #15479: lightweight vector operations: 3 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(110,14)
      remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(129,7) ]
      remark #15389: vectorization support: reference this_loc has unaligned access   [ ../src/location.hpp(129,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(129,7) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 8 
      remark #15477: vector loop cost: 3.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 5 
      remark #15480: medium-overhead vector operations: 1 
      remark #15487: type converts: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/load_balancer.cpp(111,3)
      remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/load_balancer.cpp(112,9) ]
      remark #15389: vectorization support: reference this has unaligned access   [ ../src/load_balancer.cpp(112,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/load_balancer.cpp(112,9) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 14 
      remark #15477: vector loop cost: 6.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 11 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/location.hpp(145,3) inlined into ../src/load_balancer.cpp(102,26)
      remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(146,9) ]
      remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(146,9) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(146,9) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 0.440 
      remark #15479: lightweight vector operations: 3 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(53,28) inlined into ../src/load_balancer.cpp(126,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(130,3)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/load_balancer.cpp(131,13) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/load_balancer.cpp(131,13) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(134,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 135 and e line 135
   remark #15346: vector dependence: assumed ANTI dependence between e line 135 and _M_elems line 135
LOOP END

LOOP BEGIN at ../src/location.hpp(129,13) inlined into ../src/load_balancer.cpp(139,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 129 and _M_elems line 139
   remark #15346: vector dependence: assumed ANTI dependence between _M_elems line 139 and _M_elems line 129

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(139,19)
      remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(129,7) ]
      remark #15389: vectorization support: reference this_loc has unaligned access   [ ../src/location.hpp(129,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(129,7) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 8 
      remark #15477: vector loop cost: 3.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 5 
      remark #15480: medium-overhead vector operations: 1 
      remark #15487: type converts: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(139,19)
   LOOP END

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(139,19)
   LOOP END
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(142,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 143 and e line 143
   remark #15346: vector dependence: assumed ANTI dependence between e line 143 and _M_elems line 143
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/load_balancer.cpp(145,2)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/load_balancer.cpp(60,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::location<3>::location(xtree::location<3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(53,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(53,3)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(53,3)
      remark #15389: vectorization support: reference __first_422981 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(53,3)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: xtree::location<3>::get_neighbor(xtree::location<3> *, const xtree::location<3> *, const xtree::indexer<3, 3, -1> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(96,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(96,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(96,12)
      remark #15389: vectorization support: reference __first_422981 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/location.hpp(96,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/location.hpp(97,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __p1_423018 line 98 and this line 98
   remark #15346: vector dependence: assumed ANTI dependence between this line 98 and __p1_423018 line 98
LOOP END
===========================================================================

Begin optimization report for: std::list<signed int, std::allocator<signed int>>::~list(std::list<signed int, std::allocator<signed int>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: xtree::load_balancer::decrement_server(xtree::load_balancer *, int, const xtree::location<3> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/location.hpp(24,3) inlined into ../src/load_balancer.cpp(150,33)
   remark #15389: vectorization support: reference loc has unaligned access   [ ../src/location.hpp(25,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(25,4) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.190 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable.h(1388,57) inlined into ../src/load_balancer.cpp(150,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(153,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 154 and _M_elems line 154
   remark #15346: vector dependence: assumed ANTI dependence between _M_elems line 154 and _M_elems line 154
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(156,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 129 and _M_elems line 157
   remark #15346: vector dependence: assumed ANTI dependence between _M_elems line 157 and _M_elems line 129

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(157,19)
      remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(129,7) ]
      remark #15389: vectorization support: reference loc has unaligned access   [ ../src/location.hpp(129,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(129,7) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 8 
      remark #15477: vector loop cost: 3.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 5 
      remark #15480: medium-overhead vector operations: 1 
      remark #15487: type converts: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(157,19)
   LOOP END

   LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/load_balancer.cpp(157,19)
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable.h(1468,7) inlined into ../src/load_balancer.cpp(159,25)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/load_balancer.cpp(160,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 161 and _M_elems line 161
   remark #15346: vector dependence: assumed ANTI dependence between _M_elems line 161 and _M_elems line 161
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/load_balancer.cpp(149,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock_pool.hpp(88,47) inlined into /home/dmarce1/packages/intel64/include/boost/system/error_code.hpp(221,53)
<Peeled>
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock_pool.hpp(88,47) inlined into /home/dmarce1/packages/intel64/include/boost/system/error_code.hpp(221,53)
   remark #15389: vectorization support: reference Ud3b has unaligned access   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(108,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(108,9) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 1.130 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock_pool.hpp(88,47) inlined into /home/dmarce1/packages/intel64/include/boost/system/error_code.hpp(221,53)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_factory_hpx_load_balancer::hpx_plugin_exporter_factory_hpx_load_balancer(<unnamed>::hpx_plugin_exporter_factory_hpx_load_balancer *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/load_balancer.cpp(170,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/load_balancer.cpp(170,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_registry_hpx_load_balancer::hpx_plugin_exporter_registry_hpx_load_balancer(<unnamed>::hpx_plugin_exporter_registry_hpx_load_balancer *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/load_balancer.cpp(170,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/load_balancer.cpp(170,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>>::pointer>(std::_Vector_base<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>>::pointer, std::_Vector_base<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::reset_queue_entry::~reset_queue_entry(hpx::lcos::local::detail::condition_variable::reset_queue_entry *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(61,24)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<int32_t, int32_t>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>(std::_Vector_base<std::string, std::allocator<std::string>>::pointer, std::_Vector_base<std::string, std::allocator<std::string>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first line 547
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>>(hpx::naming::gid_type *, std::size_t, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(581,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(24,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(611,13) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(590,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(24,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::string_stub_dump<boost::error_info<boost::tag_original_exception_type, const std::type_info *>>(std::string *, const boost::error_info<boost::tag_original_exception_type, const std::type_info *> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/exception/detail/object_hex_dump.hpp(40,52) inlined into /home/dmarce1/packages/intel64/include/boost/exception/to_string_stub.hpp(85,27)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<int>::wait(hpx::lcos::detail::future_data<int> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<void>::wait(hpx::lcos::detail::future_data<void> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::wait_until<hpx::lcos::local::spinlock::scoped_lock>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::spinlock::scoped_lock &, const hpx::util::steady_time_point &, const char *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(252,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(249,25)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::wait<hpx::lcos::local::spinlock::scoped_lock>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::spinlock::scoped_lock &, const char *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(220,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(217,25)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::notify_all<hpx::lcos::local::spinlock::scoped_lock>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::spinlock::scoped_lock &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(140,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::abort_all<hpx::lcos::local::no_mutex>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::no_mutex &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(171,13)
   remark #15529: loop was not vectorized: volatile assignment was not vectorized. Try using non-volatile assignment.   [ /home/dmarce1/packages/intel64/include/hpx/runtime/threads/detail/tagged_thread_state.hpp(39,24) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::add_msg(const hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type> *, const hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/cache_before_init.hpp(138,47)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/cache_before_init.hpp(139,22)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/cache_before_init.hpp(139,22)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 245 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between U38 line 249 and U38 line 245
LOOP END
===========================================================================

Begin optimization report for: hpx::util::logging::gather_holder<hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::self_type, hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::gather_type>::gather_holder(hpx::util::logging::gather_holder<hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::self_type, hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::gather_type> *, const hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::self_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/basic_ios.h(454,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/logger.hpp(34,9)
   remark #15389: vectorization support: reference this_257731 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/basic_ios.h(454,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/logger.hpp(34,9)
   remark #15389: vectorization support: reference this_257731 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/streambuf(463,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/logger.hpp(34,9)
   remark #15389: vectorization support: reference this_257750 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 3
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 1.140 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::clone(boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container> *, const boost::exception_detail::error_info_container_impl *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(105,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(119,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1216,4) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::release(const boost::exception_detail::error_info_container_impl *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(148,21)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::diagnostic_information(const boost::exception_detail::error_info_container_impl *, const char *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(113,91)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::get(boost::shared_ptr<boost::exception_detail::error_info_base> *, const boost::exception_detail::error_info_container_impl *, const boost::exception_detail::type_info_ &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/typeinfo(116,35) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(94,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::set(boost::exception_detail::error_info_container_impl *, const boost::shared_ptr<boost::exception_detail::error_info_base> &, const boost::exception_detail::type_info_ &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/typeinfo(116,35) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(87,22)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::__uninitialized_fill_n<false>::__uninit_fill_n<std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type>(std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: std::__uninitialized_copy<false>::__uninit_copy<boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer>(boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::vector<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message, std::allocator<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message>>::pointer>(std::vector<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message, std::allocator<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message>>::pointer, std::vector<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message, std::allocator<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between U45 line 245 and U45 line 249
   remark #15346: vector dependence: assumed FLOW dependence between U38 line 249 and U38 line 245
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>>::_M_default_append(std::vector<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>> *, std::vector<xtree::load_balancer::entry_type, std::allocator<xtree::load_balancer::entry_type>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable_policy.h(1984,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::_Hashtable<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::_M_insert<const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &, std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::__node_gen_type>(std::_Hashtable<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>> *, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::value_type &, const std::__detail::_Insert_base<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::__node_gen_type &, std::true_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/location.hpp(24,3) inlined into /usr/include/c++/4.9.0/bits/hashtable.h(1662,29)
   remark #15389: vectorization support: reference __v has unaligned access   [ ../src/location.hpp(25,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(25,4) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.190 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable.h(1388,57) inlined into /usr/include/c++/4.9.0/bits/hashtable.h(1665,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable.h(1951,7) inlined into /usr/include/c++/4.9.0/bits/hashtable.h(1670,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Hashtable<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::find(std::_Hashtable<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>> *, const std::_Hashtable<xtree::location<3>, xtree::location<3>, std::allocator<xtree::location<3>>, std::__detail::_Identity, std::equal_to<xtree::location<3>>, std::hash<xtree::location<3>>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__uset_traits<true>>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/location.hpp(24,3) inlined into /usr/include/c++/4.9.0/bits/hashtable.h(1236,34)
   remark #15389: vectorization support: reference __k has unaligned access   [ ../src/location.hpp(25,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(25,4) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.190 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/hashtable.h(1388,57) inlined into /usr/include/c++/4.9.0/bits/hashtable.h(1238,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_range_initialize<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<boost::iterator_value<boost::range_iterator<std::vector<std::string, std::allocator<std::string>>, void>::type>::type, boost::range_iterator<const char *, void>::type>, boost::algorithm::split_iterator<boost::range_iterator<const char *, void>::type>, boost::use_default, boost::use_default>>(std::vector<std::string, std::allocator<std::string>> *, boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<boost::iterator_value<boost::range_iterator<std::vector<std::string, std::allocator<std::string>>, void>::type>::type, boost::range_iterator<const char *, void>::type>, boost::algorithm::split_iterator<boost::range_iterator<const char *, void>::type>, boost::use_default, boost::use_default> *, boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<boost::iterator_value<boost::range_iterator<std::vector<std::string, std::allocator<std::string>>, void>::type>::type, boost::range_iterator<const char *, void>::type>, boost::algorithm::split_iterator<boost::range_iterator<const char *, void>::type>, boost::use_default, boost::use_default> *, std::input_iterator_tag)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/basic_string.h(215,53) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(1268,19)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(1268,6)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(1268,6)
      remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
      remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between U45 line 547 and U45 line 249
      remark #15346: vector dependence: assumed FLOW dependence between __first_301127 line 249 and __first_301127 line 547
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1545,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1561,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1577,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_M_copy(std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1216,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1545,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1561,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1577,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================
