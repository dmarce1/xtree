
Begin optimization report for: gslice_row_major(std::gslice *, std::size_t, std::valarray<std::size_t> *, std::valarray<std::size_t> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(15,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(16,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: execute()

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(69,13)
   remark #15382: vectorization support: call to function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/shared_ptr_base.h(666,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(69,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(80,13)
   remark #15382: vectorization support: call to function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/shared_ptr_base.h(666,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(80,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(86,12)
   remark #15382: vectorization support: call to function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/shared_ptr_base.h(666,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(86,12)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(86,12)
   remark #15382: vectorization support: call to function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/shared_ptr_base.h(666,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(86,12)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/main.cpp(86,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::event<hpx::lcos::local::spinlock>::set(hpx::lcos::local::detail::event<hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(64,52)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::parse(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *, const boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::string_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(367,9) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(421,25)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(60,19) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(421,25)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(430,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(479,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this line 480 and argN_ line 481
   remark #15346: vector dependence: assumed FLOW dependence between argN_ line 481 and this line 480
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(479,13)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(488,16)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4e5 line 93 and U4e5 line 245
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 245 and this_419399 line 93
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::parse_printf_directive<char, std::char_traits<char>, std::allocator<char>, std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator, std::ctype<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>::const_iterator &, boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, const std::ctype<char> &, std::size_t, unsigned char)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(76,26) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(156,45)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(60,19) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(231,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(76,26) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(233,66)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(60,19) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(244,52)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(76,26) inlined into /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(246,74)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(254,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(187,9)
   remark #15535: loop was not vectorized: loop contains switch statement. Consider using if-else statement.   [ /home/dmarce1/packages/intel64/include/boost/format/parsing.hpp(189,13) ]
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::make_or_reuse_data(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(121,24)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4e5 line 93 and U4e5 line 245
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 245 and this_419399 line 93
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(123,13)
   remark #15382: vectorization support: call to function _ZNSs6resizeEmc cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(763,15) ]
   remark #15382: vectorization support: call to function _ZNSs6resizeEmc cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(763,15) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this line 124 and  line 763
   remark #15346: vector dependence: assumed FLOW dependence between  line 763 and this line 124
LOOP END
===========================================================================

Begin optimization report for: std::vector<bool, std::allocator<bool>>::_M_fill_insert(std::vector<bool, std::allocator<bool>> *, std::vector<bool, std::allocator<bool>>::iterator, std::vector<bool, std::allocator<bool>>::size_type, bool)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(542,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(717,51)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_offset line 160 and _M_offset line 158
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15389: vectorization support: reference __first_280363 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(394,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(718,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(727,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 87 and _M_p line 89
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 89 and _M_p line 87
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15389: vectorization support: reference __first_280363 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(394,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(728,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(730,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 87 and _M_p line 89
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_p line 89 and _M_p line 87
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::_M_fill_insert(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::iterator, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(459,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(557,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(464,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(466,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(471,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(476,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(480,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(493,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(522,8)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4f2 line 93 and U4f2 line 249
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 249 and this_419399 line 93
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer>(std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer, std::_Vector_base<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4e5 line 93 and U4e5 line 245
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 245 and this_419399 line 93
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::_M_fill_assign(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(229,2)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4f2 line 93 and U4f2 line 249
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 249 and this_419399 line 93
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(692,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(232,4)
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSt6localeaSERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(674,80) ]
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function _ZNSt6localeC1ERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(465,50) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between this_423900 line 64 and this_423900 line 466
   remark #15346: vector dependence: assumed OUTPUT dependence between __first_423891 line 466 and __first_423891 line 64
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(233,4)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(748,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(239,25)
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSs6assignERKSs cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(555,22) ]
   remark #15382: vectorization support: call to function _ZNSt6localeaSERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(674,80) ]
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function _ZNSt6localeC1ERKS_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(465,50) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between this_423900 line 64 and this_423900 line 466
   remark #15346: vector dependence: assumed OUTPUT dependence between __first_423994 line 466 and __first_423994 line 64
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(239,9)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4e5 line 93 and U4e5 line 245
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 245 and this_419399 line 93
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::vector(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::size_type, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::value_type &, const std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(200,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(292,9)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::~vector(std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4f2 line 93 and U4f2 line 249
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 249 and this_419399 line 93
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::~basic_format(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_fwd.hpp(25,11)
   remark #15382: vectorization support: call to function _ZNSt6localeD1Ev cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/optional/optional.hpp(722,66) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4f2 line 93 and U4f2 line 249
   remark #15346: vector dependence: assumed ANTI dependence between this_419399 line 249 and this_419399 line 93
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::str(boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::string_type *, const boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(257,29) inlined into /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(228,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between sz.433681 line 263 and sz.433681 line 259
   remark #15346: vector dependence: assumed ANTI dependence between sz.433681 line 259 and sz.433681 line 263
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(230,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::tree<fmmx_node_type, 3>::place_root(xtree::tree<fmmx_node_type, 3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/tree.hpp(78,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/tree.hpp(78,10)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/tree.hpp(78,10)
      remark #15389: vectorization support: reference __first_699852 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/tree.hpp(78,10)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<const xtree::location<3> &, hpx::naming::id_type &, int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, const xtree::location<3> &, hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(154,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<const xtree::location<3> &, hpx::naming::id_type &, int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, const xtree::location<3> &, hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(164,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::vector(std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>> *, std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::size_type, const std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 2
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 19 
   remark #15477: vector loop cost: 75.000 
   remark #15478: estimated potential speedup: 0.500 
   remark #15479: lightweight vector operations: 11 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: xtree::tree<fmmx_node_type, 3>::delete_node(xtree::tree<fmmx_node_type, 3> *, fmmx_node_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into ../src/tree.hpp(131,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/tree.hpp(130,52)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::tree<fmmx_node_type, 3>::output(const xtree::tree<fmmx_node_type, 3> *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/tree.hpp(136,40)
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 6.500 
   remark #15478: estimated potential speedup: 2.580 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/tree.hpp(149,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into ../src/tree.hpp(155,66)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../src/tree.hpp(160,43)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/tree.hpp(164,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/tree.hpp(168,3)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/tree.hpp(137,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/tree.hpp(146,53)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at ../src/tree.hpp(157,35)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/tree.hpp(170,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::tree<fmmx_node_type, 3>::action_output>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/async.hpp(125,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/async.hpp(125,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_output, void>::type, boost::mpl::identity<void>::type, hpx::actions::action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::output, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_output, void>::type, boost::mpl::identity<void>::type, hpx::actions::action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::output, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_output, void>::type, boost::mpl::identity<void>::type, hpx::actions::action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::output, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_output, void>::type, boost::mpl::identity<void>::type, hpx::actions::action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::output, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_output, void>::type, boost::mpl::identity<void>::type, hpx::actions::action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::output, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_output, void>::type, boost::mpl::identity<void>::type, hpx::actions::action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::output, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<void, hpx::util::unused_type>::~promise(hpx::lcos::promise<void, hpx::util::unused_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(675,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(675,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(675,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(191,24)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
   remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(191,24)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(210,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
   remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(210,8)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::get_output_zones(std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> *, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(374,66)
   remark #15389: vectorization support: reference __b_456686 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into ../src/./fmmx_node.hpp(375,54)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(376,41)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(376,41)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(376,41)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(378,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into ../src/./fmmx_node.hpp(391,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into ../src/./fmmx_node.hpp(391,19)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into ../src/./fmmx_node.hpp(391,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into ../src/./fmmx_node.hpp(391,19)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/./fmmx_node.hpp(379,30)
      remark #15389: vectorization support: reference __first_481249 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 0.870 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> &, void, void, void, void, void, void, void>>::await_range<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<const hpx::util::tuple<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> &, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::type, void>::type>(hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> &, void, void, void, void, void, void, void>> *, boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<const hpx::util::tuple<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> &, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::type, void>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::type, void>::type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/wait_all.hpp(183,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::silo_output<3>::action_send_zones_to_silo, uint32_t, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, uint32_t &&, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(213,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(213,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<uint32_t, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, uint32_t &&, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(85,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::applier::detail::apply_l_p<hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution>::action_type, uint32_t, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &>(hpx::actions::continuation *, const hpx::naming::id_type &, const hpx::naming::address &, hpx::threads::thread_priority, uint32_t &&, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/applier/preprocessed/apply_implementations_5.hpp(420,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)>::assign<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>(hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)> *, boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/basic_function.hpp(106,21)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::vector(std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> *, const std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>::~tuple(hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<uint32_t, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, uint32_t &&, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(95,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::silo_output<3>::action_send_zones_to_silo, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::~vector(std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::vector(std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>> *, const std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(53,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_current line 912 and _M_current line 912
   remark #15346: vector dependence: assumed ANTI dependence between __cur.1436233 line 912 and __cur.1436233 line 912
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::~vector(std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::execute_operations(xtree::node<fmmx_node_type, 3> *, std::vector<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(412,29)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::operations_end(hpx::lcos::shared_future<void> *, xtree::node<fmmx_node_type, 3> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(382,39)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(383,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(387,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_operations_end, int &>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_operations_end, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::operations_end, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_operations_end, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::operations_end, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_operations_end, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::operations_end, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_operations_end, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::operations_end, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_operations_end, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::operations_end, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_operations_end, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::operations_end, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>::await_range<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>, 0>::deref<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>>::type>::element>::type, void>::type>(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>> *, boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>, 0>::deref<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>>::type>::element>::type, void>::type, boost::range_iterator<boost::unwrap_reference<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>, 0>::deref<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>>::type>::element>::type, void>::type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(229,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(257,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(const struct lambda [] *)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(758,23)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(759,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into ../src/node.hpp(759,50)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/counting_semaphore.hpp(130,17) inlined into ../src/node.hpp(760,24)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(762,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(758,46)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(758,33)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(760,24)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::detail::promise<void, hpx::util::unused_type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::detail::promise<void, hpx::util::unused_type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(213,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(213,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(85,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>::~tuple(hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::vector(std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> *, const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(322,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::applier::detail::apply_helper<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution>::call<hpx::util::tuple<xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &, void, void, void, void, void, void>>(hpx::actions::continuation_type &, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_priority, hpx::util::tuple<xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &, void, void, void, void, void, void> &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/applier/apply_helper.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/applier/apply_helper.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, xtree::dir_type<3> &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(95,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type *, const struct lambda [] *, const xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type &)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(240,27)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(240,27)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(240,27)
      remark #15388: vectorization support: reference U88b has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 23 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 3.660 
      remark #15479: lightweight vector operations: 8 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(240,27)
   <Remainder>
      remark #15387: vectorization support: scalar type occupies entire vector
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(241,29)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(241,29)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(241,29)
      remark #15388: vectorization support: reference U88b has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 23 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 3.660 
      remark #15479: lightweight vector operations: 8 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(241,29)
   <Remainder>
      remark #15387: vectorization support: scalar type occupies entire vector
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(242,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(242,5)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(242,5)
      remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 6.600 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(242,5)
   <Remainder>
      remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(242,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(244,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(244,12)
      remark #15388: vectorization support: reference U88b has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 23 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 3.660 
      remark #15479: lightweight vector operations: 8 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Remainder>
      remark #15387: vectorization support: scalar type occupies entire vector
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(244,12)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(244,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(244,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(244,12)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(244,12)
      remark #15388: vectorization support: reference U88b has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 23 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 3.660 
      remark #15479: lightweight vector operations: 8 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Remainder>
      remark #15387: vectorization support: scalar type occupies entire vector
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(244,12)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(244,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(244,12)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(246,6)
   remark #15389: vectorization support: reference F64 has unaligned access   [ ../src/./fmmx_node.hpp(248,12) ]
   remark #15389: vectorization support: reference F64 has unaligned access   [ ../src/./fmmx_node.hpp(248,12) ]
   remark #15389: vectorization support: reference F64 has unaligned access   [ ../src/./fmmx_node.hpp(250,12) ]
   remark #15389: vectorization support: reference F64 has unaligned access   [ ../src/./fmmx_node.hpp(250,12) ]
   remark #15389: vectorization support: reference F64 has unaligned access   [ ../src/./fmmx_node.hpp(248,12) ]
   remark #15389: vectorization support: reference F64 has unaligned access   [ ../src/./fmmx_node.hpp(250,12) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./fmmx_node.hpp(250,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 28 
   remark #15477: vector loop cost: 20.500 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 14 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(246,6)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(254,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/./exafmm.hpp(58,33) inlined into ../src/./fmmx_node.hpp(255,24)
   <Peeled>
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(58,33) inlined into ../src/./fmmx_node.hpp(255,24)
      remark #15388: vectorization support: reference U47e has aligned access   [ /usr/include/c++/4.9.0/complex(1201,24) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 4.660 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(178,3) inlined into ../src/./fmmx_node.hpp(255,24)

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(255,24)
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(255,24)
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(255,24)
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(255,24)
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(58,33) inlined into ../src/./fmmx_node.hpp(255,24)
   <Remainder>
      remark #15387: vectorization support: scalar type occupies entire vector
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(63,3) inlined into ../src/./fmmx_node.hpp(255,24)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/./exafmm.hpp(64,4) inlined into ../src/./fmmx_node.hpp(255,24)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/./exafmm.hpp(68,5) inlined into ../src/./fmmx_node.hpp(255,24)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 383 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between CjM_1096660 line 1297 and CjM_1096660 line 383

            LOOP BEGIN at ../src/./exafmm.hpp(69,28) inlined into ../src/./fmmx_node.hpp(255,24)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed ANTI dependence between _M_value line 383 and _M_value line 1297
               remark #15346: vector dependence: assumed FLOW dependence between CjM_1096660 line 1297 and CjM_1096660 line 383
            LOOP END

            LOOP BEGIN at ../src/./exafmm.hpp(81,6) inlined into ../src/./fmmx_node.hpp(255,24)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
               remark #15346: vector dependence: assumed FLOW dependence between CjM_1096660 line 1297 and CjM_1096660 line 1201
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(258,3)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./fmmx_node.hpp(243,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: get_restrict_slice(std::gslice *, const std::valarray<std::size_t> &, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./valarray.hpp(55,49)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between I64 line 219 and I64 line 219
   remark #15346: vector dependence: assumed ANTI dependence between __p.456877 line 219 and __p.456877 line 219
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./valarray.hpp(55,49)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(57,35)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(61,35)
   remark #15389: vectorization support: reference I64 has unaligned access   [ ../src/./valarray.hpp(62,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(62,3) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 4
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 52.000 
   remark #15478: estimated potential speedup: 0.460 
   remark #15479: lightweight vector operations: 9 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(61,35)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(677,4) inlined into ../src/./valarray.hpp(64,10)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(677,4) inlined into ../src/./valarray.hpp(64,10)
   remark #15389: vectorization support: reference __p.439510 has unaligned access
   remark #15389: vectorization support: reference __p.439510 has unaligned access
   remark #15389: vectorization support: reference __p.439510 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 10.000 
   remark #15478: estimated potential speedup: 1.180 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(677,4) inlined into ../src/./valarray.hpp(64,10)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(65,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(65,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::valarray<xtree::expansion<5UL>>::~valarray(std::valarray<xtree::expansion<5UL>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(std::valarray<xtree::expansion<5UL>> *, const struct lambda [] *, const xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type &)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./fmmx_node.hpp(351,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this line 352 and I64 line 363
   remark #15346: vector dependence: assumed FLOW dependence between I64 line 363 and this line 352
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(367,82)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(367,82)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(367,82)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(367,42)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(367,42)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(367,42)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(367,42)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(367,42)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(367,42)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(367,42)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: get_slice(std::gslice *, std::valarray<std::size_t> *, std::valarray<std::size_t> *, std::valarray<std::size_t> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./valarray.hpp(25,48)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __p.456799 line 219 and maxes line 219
   remark #15346: vector dependence: assumed ANTI dependence between maxes line 219 and __p.456799 line 219
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./valarray.hpp(25,48)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(28,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between I64 line 29 and I64 line 30
   remark #15346: vector dependence: assumed ANTI dependence between I64 line 30 and I64 line 29
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(28,2)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(32,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(32,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, xtree::dir_type<3> &, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {..0(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::result_type>::value_type &>(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, xtree::dir_type<3> &, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::result_type>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(213,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(213,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::exchange_set<es_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<xtree::dir_type<3> &, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::result_type>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::exchange_set<es_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, xtree::dir_type<3> &, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::result_type>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(85,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::exchange_set<es_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<xtree::dir_type<3> &, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::result_type>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::exchange_set<es_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, xtree::dir_type<3> &, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::result_type>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(95,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::exchange_set<es_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::exchange_set<es_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::pointer>(std::_Vector_base<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::pointer, std::_Vector_base<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::pointer>(std::_Vector_base<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::pointer, std::_Vector_base<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>::pointer>(std::_Vector_base<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>::pointer, std::_Vector_base<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>::pointer>(std::_Vector_base<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>::pointer, std::_Vector_base<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::pointer>(std::_Vector_base<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::pointer, std::_Vector_base<xtree::node<fmmx_node_type, 3>::operation_type, std::allocator<xtree::node<fmmx_node_type, 3>::operation_type>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>, std::allocator<std::remove_const<std::remove_volatile<std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>, std::allocator<std::remove_const<std::remove_volatile<std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/shared_ptr_base.h(524,2)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/shared_ptr_base.h(524,2)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/shared_ptr_base.h(524,2)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/shared_ptr_base.h(524,2)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::detail::sp_counted_impl_p<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>>::dispose(boost::detail::sp_counted_impl_p<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_impl.hpp(78,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>::~tuple(hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::detail::sp_counted_impl_p<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>>::dispose(boost::detail::sp_counted_impl_p<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_impl.hpp(78,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::detail::sp_counted_impl_p<hpx::actions::transfer_action<action_send_zones_to_silo>>::dispose(boost::detail::sp_counted_impl_p<hpx::actions::transfer_action<action_send_zones_to_silo>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_impl.hpp(78,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::detail::function::function_obj_invoker2<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::match_type, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type>::invoke(boost::detail::function::function_buffer &, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type, boost::algorithm::detail::find_iterator_base<boost::range_iterator<const char *, void>::type>::input_iterator_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(118,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/finder.hpp(578,29) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(960,7) inlined into /home/dmarce1/packages/intel64/include/boost/function/function_template.hpp(132,23)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::extended_type_info_typeid<xtree::node<fmmx_node_type, 3>::wrapped_type>::destroy(const boost::serialization::extended_type_info_typeid<xtree::node<fmmx_node_type, 3>::wrapped_type> *, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::extended_type_info_typeid<xtree::tree<fmmx_node_type, 3>>::destroy(const boost::serialization::extended_type_info_typeid<xtree::tree<fmmx_node_type, 3>> *, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::key_type, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::value_type, std::_Identity<std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::value_type>, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::key_compare, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::_Key_alloc_type>::_M_erase(std::_Rb_tree<std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::key_type, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::value_type, std::_Identity<std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::value_type>, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::key_compare, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::_Key_alloc_type> *, std::_Rb_tree<std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::key_type, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::value_type, std::_Identity<std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::value_type>, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::key_compare, std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::_Key_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>>::~set(std::set<fmmx_node_type *, std::less<fmmx_node_type *>, std::allocator<fmmx_node_type *>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /usr/include/c++/4.9.0/bits/stl_set.h(90,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::array<hpx::naming::id_type, 2UL>::~array(std::array<hpx::naming::id_type, 2UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::extended_type_info_typeid<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>::deref<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>>::element>::destroy(const boost::serialization::extended_type_info_typeid<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>::deref<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>>::element> *, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::extended_type_info_typeid<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>>::element>::destroy(const boost::serialization::extended_type_info_typeid<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>>::element> *, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::extended_type_info_typeid<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::destroy(const boost::serialization::extended_type_info_typeid<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/extended_type_info_typeid.hpp(133,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::pointer_iserializer<hpx::util::portable_binary_iarchive, xtree::node<fmmx_node_type, 3>::wrapped_type>::load_object_ptr(const boost::archive::detail::pointer_iserializer<hpx::util::portable_binary_iarchive, xtree::node<fmmx_node_type, 3>::wrapped_type> *, boost::archive::detail::basic_iarchive &, void *, unsigned int) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(341,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(341,9)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(341,9)
      remark #15389: vectorization support: reference __first_699852 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(341,9)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>>::~vector(std::vector<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::allocate(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(265,41)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.540 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(266,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./fmmx_node.hpp(266,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,11)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./fmmx_node.hpp(267,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,4)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(267,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(267,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(267,4)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,11)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./fmmx_node.hpp(268,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,4)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(268,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(268,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(268,4)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(269,6)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(270,2)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(271,8)
      remark #15389: vectorization support: reference __b_456686 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::~vector(std::vector<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::~vector(std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, xtree::node<fmmx_node_type, 3>::wrapped_type>::destroy(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, xtree::node<fmmx_node_type, 3>::wrapped_type> *, void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::load_array_type<hpx::util::portable_binary_iarchive>::invoke<int [3]>(hpx::util::portable_binary_iarchive &, int (&)[3])

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_iarchive.hpp(302,44) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(591,12)
   remark #15382: vectorization support: call to function _ZN3hpx4util24portable_binary_iarchive9load_implERlc cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_iarchive.hpp(136,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between l.583085 line 135 and l.583085 line 136
   remark #15346: vector dependence: assumed OUTPUT dependence between l.583085 line 136 and l.583085 line 135
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::pointer_iserializer<hpx::util::portable_binary_iarchive, xtree::tree<fmmx_node_type, 3>>::load_object_ptr(const boost::archive::detail::pointer_iserializer<hpx::util::portable_binary_iarchive, xtree::tree<fmmx_node_type, 3>> *, boost::archive::detail::basic_iarchive &, void *, unsigned int) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(341,9)
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, xtree::tree<fmmx_node_type, 3>>::destroy(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, xtree::tree<fmmx_node_type, 3>> *, void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, std::array<int, 3UL>>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, std::array<int, 3UL>> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(285,32) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZN3hpx4util24portable_binary_oarchive9save_implElc cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(126,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>::deref<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>>::element>::destroy(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>::deref<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>>::element> *, void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>::deref<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>>::element>::load_object_data(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>::deref<boost::fusion::hpx_tuple_iterator<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, 0>::advance<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>>>::type, boost::mpl::int_<1>>::tuple_type, 1>>::element> *, boost::archive::detail::basic_iarchive &, void *, unsigned int) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(184,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(157,5) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(184,5)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::stl::archive_input_seq<hpx::util::portable_binary_iarchive, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::operator()(boost::serialization::stl::archive_input_seq<hpx::util::portable_binary_iarchive, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>> *, hpx::util::portable_binary_iarchive &, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> &, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::iterator)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(65,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
   remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(65,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(65,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
   remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(65,11)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::_M_emplace_back_aux<const std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::value_type &>(std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> *, const std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(413,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
   remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(413,6)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(413,6)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
   remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(413,6)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(433,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::pointer>(std::_Vector_base<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::pointer, std::_Vector_base<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::reserve(std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> *, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(73,20)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(73,20)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_current line 75 and _M_current line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859071 line 75 and __cur.859071 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(73,20)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(73,20)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __first_859732 line 75 and __first_859732 line 75
      remark #15346: vector dependence: assumed ANTI dependence between __cur.859732 line 75 and __cur.859732 line 75
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(73,20)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(76,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::load<hpx::util::portable_binary_iarchive, double, std::allocator<double>>(hpx::util::portable_binary_iarchive &, std::vector<double, std::allocator<double>> &, unsigned int, boost::mpl::true_)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
      remark #15388: vectorization support: reference __first_481249 has aligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.280 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
      remark #15388: vectorization support: reference __first_481249 has aligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.280 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/vector.hpp(107,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>::type>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>::type> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/serialization/collections_save_imp.hpp(59,5) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, std::array<double, 3UL>>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, std::array<double, 3UL>> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(285,44) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>>::element>::destroy(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, 0>>::element> *, void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::stl::load_collection<hpx::util::portable_binary_iarchive, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, boost::serialization::stl::archive_input_seq<hpx::util::portable_binary_iarchive, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>, boost::serialization::stl::reserve_imp<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>(hpx::util::portable_binary_iarchive &, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(140,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(153,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(153,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(157,5)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::stl::archive_input_seq<hpx::util::portable_binary_iarchive, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>::operator()(boost::serialization::stl::archive_input_seq<hpx::util::portable_binary_iarchive, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>> *, hpx::util::portable_binary_iarchive &, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &, unsigned int, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::iterator)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(65,11)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/collections_load_imp.hpp(65,11)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::pointer>(std::_Vector_base<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::pointer, std::_Vector_base<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>::type>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>::type> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/serialization/collections_save_imp.hpp(59,5) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, 0>>::element>::load_object_data(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, 0>>::element> *, boost::archive::detail::basic_iarchive &, void *, unsigned int) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(39,3) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(184,5)
   remark #15382: vectorization support: call to function _ZN3hpx4util24portable_binary_iarchive9load_implERlc cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_iarchive.hpp(136,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between x line 173 and t_583085 line 137
   remark #15346: vector dependence: assumed FLOW dependence between t_583085 line 137 and x line 173
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<xtree::indexer<3, 3, -1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>::type>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<xtree::indexer<3, 3, -1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>::type> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(39,3) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZN5boost7archive6detail14basic_oarchive12end_preambleEv cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(87,12) ]
   remark #15382: vectorization support: call to function _ZN3hpx4util24portable_binary_oarchive9save_implElc cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(126,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type &&>::type, void, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type &&>::type, void, void, void, void, void, void, void>, 0>>::element>::load_object_data(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type &&>::type, void, void, void, void, void, void, void>, 0>::deref<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<hpx::util::decay<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type &&>::type, void, void, void, void, void, void, void>, 0>>::element> *, boost::archive::detail::basic_iarchive &, void *, unsigned int) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(184,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::destroy(const boost::archive::detail::iserializer<hpx::util::portable_binary_iarchive, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/iserializer.hpp(119,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::load<hpx::util::portable_binary_iarchive, xtree::expansion<5UL>>(hpx::util::portable_binary_iarchive &, std::valarray<xtree::expansion<5UL>> &, unsigned int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,12)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/serialization/array.hpp(75,7) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(56,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::serialization::load<hpx::util::portable_binary_iarchive, complex>(hpx::util::portable_binary_iarchive &, std::valarray<complex> &, unsigned int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(111,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(54,5)
<Remainder>
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_iarchive.hpp(302,44) inlined into /home/dmarce1/packages/intel64/include/boost/serialization/valarray.hpp(56,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<future_wrapper<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>, hpx::util::tuple<hpx::util::decay<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type &&>::type, void, void, void, void, void, void, void>>::type>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, hpx::util::detail::qualify_as_impl<future_wrapper<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>, hpx::util::tuple<hpx::util::decay<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type &&>::type, void, void, void, void, void, void, void>>::type> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/serialization/array.hpp(75,7) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, xtree::expansion<5UL>>::save_object_data(const boost::archive::detail::oserializer<boost::archive::detail::save_non_pointer_type<hpx::util::portable_binary_oarchive>::archive_type, xtree::expansion<5UL>> *, boost::archive::detail::basic_oarchive &, const void *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(285,44) inlined into /home/dmarce1/packages/intel64/include/boost/archive/detail/oserializer.hpp(148,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char>>::overflow(boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char>> *, boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char>>::int_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/alt_sstream_impl.hpp(252,17)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::portable_binary_oarchive::save_array<const boost::remove_extent<int [3]>::type>(hpx::util::portable_binary_oarchive *, const boost::serialization::array<const boost::remove_extent<int [3]>::type> &, unsigned int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/portable_binary_oarchive.hpp(285,44)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::unique_lock<hpx::lcos::local::spinlock>::lock(boost::unique_lock<hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::distribute<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>, std::allocator<char>, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &>(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> &, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(283,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: boost::io::detail::put<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>, std::allocator<char>, const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &>(const boost::io::detail::put_holder<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::CharT, std::char_traits<char>> &, const boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> &, boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::string_type &, boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::internal_streambuf_t &, boost::io::detail::locale_t *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(255,29)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::clear(boost::basic_format<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(137,41)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/format_implementation.hpp(145,30)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(100,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::did_alloc(const hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(300,61)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>::~tuple(hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)>::assign<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>(hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)> *, boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/basic_function.hpp(106,21)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)>::assign<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>>::type>(hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)> *, boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>>::type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/basic_function.hpp(106,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::scoped_unlock<hpx::lcos::local::spinlock::scoped_lock>::~scoped_unlock(hpx::util::scoped_unlock<hpx::lcos::local::spinlock::scoped_lock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/scoped_unlock.hpp(24,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<xtree::tree<fmmx_node_type, 3>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::callable_vtable<hpx::threads::thread_function_sig>::invoke<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, unsigned int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>::type>(void **, hpx::threads::thread_state_ex_enum &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/preprocessed/callable_vtable_5.hpp(21,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::callable_vtable<hpx::threads::thread_function_sig>::invoke<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void, void, void>>>::type>::type>(void **, hpx::threads::thread_state_ex_enum &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/preprocessed/callable_vtable_5.hpp(21,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<xtree::silo_output<3>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::callable_vtable<hpx::threads::thread_function_sig>::invoke<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>>::type>::type>(void **, hpx::threads::thread_state_ex_enum &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/preprocessed/callable_vtable_5.hpp(21,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::callable_vtable<hpx::threads::thread_function_sig>::invoke<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>>::type>::type>(void **, hpx::threads::thread_state_ex_enum &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/preprocessed/callable_vtable_5.hpp(21,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::callable_vtable<hpx::threads::thread_function_sig>::invoke<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void, void>>>::type>::type>(void **, hpx::threads::thread_state_ex_enum &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/preprocessed/callable_vtable_5.hpp(21,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<xtree::node<fmmx_node_type, 3>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<bool, bool>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, void>::~tuple_member(hpx::util::detail::tuple_member<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/tuple.hpp(84,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::section::~section(hpx::util::section *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/ini.hpp(70,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/ini.hpp(70,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_type, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type, std::_Select1st<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type>, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_compare, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_type, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type, std::_Select1st<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type>, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_compare, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_type, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type, std::_Select1st<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::value_type>, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::key_compare, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_type, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type, std::_Select1st<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type>, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_compare, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_type, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type, std::_Select1st<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type>, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_compare, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_type, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type, std::_Select1st<std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::value_type>, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::key_compare, std::map<std::string, hpx::util::section, std::less<std::string>, std::allocator<std::pair<const std::string, hpx::util::section>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>>::~plugin_wrapper(hpx::util::plugin::detail::plugin_wrapper<boost::mpl::aux::resolve_bind_arg<boost::mpl::bind4<boost::mpl::quote4<hpx::util::plugin::detail::concrete_factory_item, boost::mpl::void_>, boost::mpl::lambda<hpx::components::component_factory_base, boost::mpl::void_>::result_, boost::mpl::lambda<hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_, boost::mpl::lambda<boost::mpl::_, boost::mpl::void_>::result_>::apply<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::a2, boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::state0, boost::mpl::deref<boost::mpl::aux::fold_impl<1, boost::mpl::begin<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, boost::mpl::end<hpx::util::plugin::virtual_constructors<hpx::components::component_factory_base>::type>::type, hpx::util::plugin::abstract_factory<hpx::components::component_factory_base>, hpx::util::plugin::detail::concrete_factory_item<hpx::components::component_factory_base, hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>, boost::mpl::_, boost::mpl::_>>::iter0>::type, boost::mpl::na, boost::mpl::na, boost::mpl::na>::type, boost::mpl::list<const hpx::util::section *, const hpx::util::section *, bool, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na, boost::mpl::na>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/plugin/detail/plugin_wrapper.hpp(31,12)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<hpx::naming::id_type>, void>::create<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<hpx::naming::id_type> *, hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<hpx::naming::id_type>, void>::create<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<hpx::naming::id_type> *, hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<xtree::load_balancer *>, void>::create<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<xtree::load_balancer *> *, hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<fmmx_node_type *>, void>::create<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<fmmx_node_type *> *, hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<bool>, void>::create<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<bool> *, hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, void>::create<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type> *, hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<xtree::tree<fmmx_node_type, 3> *>, void>::create<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type>(hpx::lcos::future<xtree::tree<fmmx_node_type, 3> *> *, hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapped_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<xtree::load_balancer>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(68,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::get_lva<const xtree::tree<fmmx_node_type, 3>>::call(hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/get_lva.hpp(106,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::get_checked(const hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type> *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(511,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<action_send_zones_to_silo>::~transfer_action(hpx::actions::transfer_action<action_send_zones_to_silo> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(484,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<action_send_zones_to_silo>::~transfer_action(hpx::actions::transfer_action<action_send_zones_to_silo> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(481,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<action_send_zones_to_silo>::get_thread_function(hpx::threads::thread_function_type *, hpx::actions::transfer_action<action_send_zones_to_silo> *, hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(531,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(531,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<action_send_zones_to_silo>::get_thread_function(hpx::threads::thread_function_type *, hpx::actions::transfer_action<action_send_zones_to_silo> *, hpx::actions::continuation_type &, hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(554,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(554,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::silo_output<3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<hpx::components::component_type>::type, hpx::util::decay<std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::silo_output<3>::send_zones_to_silo, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>>, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<action_send_zones_to_silo>::schedule_thread(hpx::actions::transfer_action<action_send_zones_to_silo> *, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_state_enum)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(692,21)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(692,21)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<action_send_zones_to_silo>::schedule_thread(hpx::actions::transfer_action<action_send_zones_to_silo> *, hpx::actions::continuation_type &, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_state_enum)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(706,17)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(706,17)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>::~transfer_action(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(484,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>::~transfer_action(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(481,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>::get_thread_function(hpx::threads::thread_function_type *, hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *, hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(531,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(531,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>::get_thread_function(hpx::threads::thread_function_type *, hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *, hpx::actions::continuation_type &, hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(554,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(554,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &&>::type, void, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_1>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>::schedule_thread(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_state_enum)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(692,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(692,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>::schedule_thread(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *, hpx::actions::continuation_type &, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_state_enum)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(706,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(706,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>::~transfer_action(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(484,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>::~transfer_action(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(481,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>::get_thread_function(hpx::threads::thread_function_type *, hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *, hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(531,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(531,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::base_action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::thread_function>, hpx::util::tuple<unsigned long, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>::get_thread_function(hpx::threads::thread_function_type *, hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *, hpx::actions::continuation_type &, hpx::naming::address::address_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(554,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(554,20)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>::schedule_thread(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_state_enum)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(692,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(692,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)>::assign<boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>>::type>(hpx::util::detail::function_base<hpx::util::detail::unique_function_vtable_ptr<hpx::threads::thread_function_sig, void, void>, hpx::threads::thread_state_enum (hpx::threads::thread_state_ex_enum)> *, boost::disable_if_c<false, hpx::util::detail::bound<hpx::util::detail::one_shot_wrapper<hpx::actions::action<xtree::node<fmmx_node_type, 3>, hpx::util::unused_type, hpx::util::tuple<hpx::util::decay<xtree::dir_type<3>>::type, hpx::util::decay<const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &>::type, void, void, void, void, void, void>, boost::mpl::if_<boost::is_same<hpx::actions::detail::this_type, hpx::actions::detail::this_type>, hpx::actions::action2<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_set, 0L}, hpx::actions::detail::this_type>, hpx::actions::detail::this_type>::type>::continuation_thread_object_function_void_2>, hpx::util::tuple<boost::shared_ptr<hpx::actions::continuation>, struct <unnamed>, xtree::node<fmmx_node_type, 3> *, xtree::indexer<3, 3, -1>, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, void, void, void>>>::type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/basic_function.hpp(106,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>::schedule_thread(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *, hpx::actions::continuation_type &, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_state_enum)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(706,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(706,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<action_get_new_node>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
      remark #15389: vectorization support: reference __first_699852 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::checked_delete<hpx::actions::transfer_action<action_send_zones_to_silo>>(hpx::actions::transfer_action<action_send_zones_to_silo> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/core/checked_delete.hpp(34,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<action_set_func>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15389: vectorization support: reference this_921785 has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: boost::checked_delete<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type>>(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/core/checked_delete.hpp(34,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15389: vectorization support: reference this_921785 has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: boost::checked_delete<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type>>(hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_set, void>::type, void>::type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/core/checked_delete.hpp(34,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_exchange_set<es_func>, void>::type, void>::type>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15389: vectorization support: reference this_921785 has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_new_node, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::type, boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::tree<fmmx_node_type, 3>::get_this, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<void>::run_impl(hpx::lcos::detail::task_base<void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(612,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<void>::reset_id::~reset_id(hpx::lcos::detail::task_base<void>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(604,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<void, hpx::util::unused_type>::release(hpx::lcos::detail::promise<void, hpx::util::unused_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(369,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(369,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(369,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<void, hpx::util::unused_type>::requires_delete(hpx::lcos::detail::promise<void, hpx::util::unused_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(388,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(393,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(395,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::lcos::shared_future<void>>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<hpx::naming::id_type>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::shared_future<hpx::naming::id_type> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<hpx::naming::id_type>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::shared_future<hpx::naming::id_type> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<hpx::naming::id_type>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<hpx::naming::id_type>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::shared_future<hpx::naming::id_type> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<hpx::naming::id_type>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::shared_future<hpx::naming::id_type> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(hpx::naming::id_type *, const struct lambda [] *, fmmx_node_type *)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/tree.hpp(115,29)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/tree.hpp(114,42)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<fmmx_node_type *>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::future<fmmx_node_type *> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::future<fmmx_node_type *>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::future<fmmx_node_type *> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::invoke_continuation<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type>::type, hpx::lcos::shared_future<void>, hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>>(hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type>::type &, hpx::lcos::shared_future<void> &, hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(83,14) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(115,52)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(79,10) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(79,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(79,10) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.830 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(115,52)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/counting_semaphore.hpp(130,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(758,33) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>>::~when_all_frame(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>>::~when_all_frame(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>::~when_all_frame(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>>::~when_all_frame(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(const struct lambda [] *, hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void> *)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(393,65)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 5
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 32.500 
   remark #15478: estimated potential speedup: 3.180 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(393,22)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(393,22)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(396,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(397,29)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(397,29)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::naming::gid_type::reliquish_lock(hpx::naming::gid_type *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/naming/name.hpp(343,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::unique_lock<hpx::naming::gid_type>::~unique_lock(boost::unique_lock<hpx::naming::gid_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(331,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::unique_lock<hpx::naming::gid_type>::lock(boost::unique_lock<hpx::naming::gid_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/naming/name.hpp(278,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/thread/lock_types.hpp(346,10)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>::operator=(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(129,24)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(129,24)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(129,24)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<void, hpx::util::unused_type>::promise(hpx::lcos::promise<void, hpx::util::unused_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(632,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(636,64)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(632,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(636,64)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::detail::promise<void, hpx::util::unused_type>, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::~vector(std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<void, hpx::util::unused_type>::~promise(hpx::lcos::promise<void, hpx::util::unused_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(676,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(676,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(676,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::invoke_continuation<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type>::type, hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, hpx::lcos::detail::continuation<hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *), void>::type>>(hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type>::type &, hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> &, hpx::lcos::detail::continuation<hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *), void>::type> &, boost::mpl::true_)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/node.hpp(319,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(80,17)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(80,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(80,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(80,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(80,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>::~tuple(hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/tuple_5.hpp(1948,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::~future_data(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::~future_data(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::run_impl(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(612,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(604,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::set_exception(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *, const boost::exception_ptr &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(628,40)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::~task_base(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(461,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::~future_data(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::~task_base(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(461,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<hpx::traits::future_traits<hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>, void>::type>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>, boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::bound<struct <unnamed>, hpx::util::tuple<boost::shared_ptr<const hpx::actions::typed_continuation<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::result_type>>, hpx::util::detail::placeholder<1UL>, void, void, void, void, void, void>>>::type *, hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>::~when_all_frame(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::~future_data(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(150,12)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>::~when_all_frame(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(196,16)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::wait_until(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type *, const struct lambda [] *, hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void> *)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(610,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(614,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(611,49)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(614,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>::~vector(std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::run(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(221,13)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::wait_until(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(const struct lambda [] *, hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void> *)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(572,18)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(572,18)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(577,6)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(571,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(573,6)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::get_checked(hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(496,37)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>>::~vector(std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<void (boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type *, hpx::lcos::future<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::invoke_continuation<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type>::type, hpx::lcos::shared_future<void>, hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>>(hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type>::type &, hpx::lcos::shared_future<void> &, hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(83,14) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(115,52)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(79,10) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(79,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(79,10) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.830 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(115,52)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(231,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(const struct lambda [] *)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(676,23)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(677,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into ../src/node.hpp(677,50)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/counting_semaphore.hpp(130,17) inlined into ../src/node.hpp(678,24)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(680,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(676,46)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(676,33)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(678,24)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::async_impl(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type> *, const hpx::lcos::detail::shared_state_ptr<void>::type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/counting_semaphore.hpp(130,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(676,33) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(230,13)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id::~reset_id(hpx::lcos::detail::continuation<hpx::lcos::shared_future<void>, boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type, boost::detail::cpp0x_result_of_impl<boost::disable_if_c<false, hpx::util::detail::unwrapped_impl<struct lambda []>>::type (hpx::lcos::shared_future<void> *), void>::type>::reset_id *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_continuation.hpp(181,25)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::release(hpx::lcos::detail::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(259,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::requires_delete(hpx::lcos::detail::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(278,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(282,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(284,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_registry<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>, factory_check>::get_component_info(hpx::components::component_registry<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>, factory_check> *, std::vector<std::string, std::allocator<std::string>> &, const std::string &, bool)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_registry.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_registry.hpp(86,25)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_306759 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<const std::vector<std::string, std::allocator<std::string>>::value_type &>(std::vector<std::string, std::allocator<std::string>> *, const std::vector<std::string, std::allocator<std::string>>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(433,2)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_306759 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::remove_reference<std::string &>::type>(std::vector<std::string, std::allocator<std::string>> *, std::remove_reference<std::string &>::type &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(418,10)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(433,2)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_306759 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: boost::algorithm::iter_split<std::vector<std::string, std::allocator<std::string>>, const char *, boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>>>(std::vector<std::string, std::allocator<std::string>> &, const char *&, boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/iter_find.hpp(181,13)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __mem_5722 line 547 and __mem_5722 line 68
   remark #15346: vector dependence: assumed FLOW dependence between __first_306759 line 68 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_306759 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<boost::range_detail::range_const_iterator<boost::remove_reference<char [2]>::type>::type>>(boost::algorithm::detail::is_any_ofF<char> *, const boost::iterator_range<boost::range_detail::range_const_iterator<boost::remove_reference<char [2]>::type>::type> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/predefined_ops.h(42,26) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1901,4) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1904,4) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(329,46) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1674,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between Storage line 1675 and Storage line 135
   remark #15346: vector dependence: assumed FLOW dependence between Storage line 135 and Storage line 1675

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(393,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1844,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15382: vectorization support: call to function __builtin_memmove cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(578,6) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __last_473991 line 1846 and __last_473991 line 1833
   remark #15346: vector dependence: assumed FLOW dependence between __i.473829 line 1833 and __i.473829 line 1846

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1827,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1865,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __last_473991 line 1824 and __last_473991 line 1833
   remark #15346: vector dependence: assumed FLOW dependence between __i.474013 line 1833 and __i.474013 line 1824

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1827,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1844,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15382: vectorization support: call to function __builtin_memmove cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(578,6) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __last_473991 line 1846 and __last_473991 line 1833
   remark #15346: vector dependence: assumed FLOW dependence between __i.473829 line 1833 and __i.473829 line 1846

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1827,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1943,7) inlined into /home/dmarce1/packages/intel64/include/boost/algorithm/string/detail/classification.hpp(103,21)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::__introsort_loop<boost::algorithm::detail::is_any_ofF<char>::set_value_type *, long, __gnu_cxx::__ops::_Iter_less_iter>(boost::algorithm::detail::is_any_ofF<char>::set_value_type *, boost::algorithm::detail::is_any_ofF<char>::set_value_type *, long, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/predefined_ops.h(42,26) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1952,6)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1901,4) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1952,6)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1904,4) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1952,6)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(329,46) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1674,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 1675 and __first line 135
   remark #15346: vector dependence: assumed FLOW dependence between __first line 135 and __first line 1675

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(393,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(212,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_heap.h(129,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(1947,8)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1943,7)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,31)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>::~component_factory(hpx::components::component_factory<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_factory.hpp(68,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_registry<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>, factory_check>::get_component_info(hpx::components::component_registry<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>, factory_check> *, std::vector<std::string, std::allocator<std::string>> &, const std::string &, bool)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_registry.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_registry.hpp(86,25)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_306759 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>::~derived_component_factory(hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,39)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,39)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,39)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,39)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>::~derived_component_factory(hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>::~derived_component_factory(hpx::components::derived_component_factory<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/derived_component_factory.hpp(77,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::component_registry<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>, factory_check>::get_component_info(hpx::components::component_registry<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>, factory_check> *, std::vector<std::string, std::allocator<std::string>> &, const std::string &, bool)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_registry.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/component_registry.hpp(86,25)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_306759 line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::get_gid(hpx::naming::gid_type *, hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~one_size_heap_list(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(78,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::~wrapper_heap_list(hpx::components::detail::wrapper_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(19,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::runtime_support::create_component0<xtree::load_balancer>(hpx::naming::gid_type *, hpx::components::server::runtime_support *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/runtime_support.hpp(454,66)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>(hpx::naming::gid_type *, hpx::components::server::runtime_support *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/runtime_support.hpp(454,66)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::runtime_support::create_component0<fmmx_node_type>(hpx::naming::gid_type *, hpx::components::server::runtime_support *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/runtime_support.hpp(454,66)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::runtime_support::create_component0<xtree::tree_type>(hpx::naming::gid_type *, hpx::components::server::runtime_support *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/runtime_support.hpp(454,66)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: xtree::silo_output<3>::silo_output(xtree::silo_output<3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/silo_output.hpp(109,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/silo_output.hpp(110,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/silo_output.hpp(110,3)
      remark #15389: vectorization support: reference __first_280363 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/silo_output.hpp(110,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into ../src/silo_output.hpp(110,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(394,8) inlined into ../src/silo_output.hpp(110,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into ../src/silo_output.hpp(110,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::~set(std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /usr/include/c++/4.9.0/bits/stl_set.h(90,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::key_type, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::value_type, std::_Identity<std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::value_type>, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::key_compare, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::_Key_alloc_type>::_M_erase(std::_Rb_tree<std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::key_type, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::value_type, std::_Identity<std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::value_type>, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::key_compare, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::_Key_alloc_type> *, std::_Rb_tree<std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::key_type, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::value_type, std::_Identity<std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::value_type>, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::key_compare, std::set<xtree::silo_output<3>::vertex, xtree::silo_output<3>::vertex_less_functor, std::allocator<xtree::silo_output<3>::vertex>>::_Key_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::list<xtree::silo_output<3>::silo_zone, std::allocator<xtree::silo_output<3>::silo_zone>>::~list(std::list<xtree::silo_output<3>::silo_zone, std::allocator<xtree::silo_output<3>::silo_zone>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: xtree::silo_output<3>::~silo_output(xtree::silo_output<3> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/silo_output.hpp(114,10)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into ../src/silo_output.hpp(114,10)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/silo_output.hpp(114,10)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __mem_5722 line 547 and __mem_5722 line 68
   remark #15346: vector dependence: assumed FLOW dependence between __first_306759 line 68 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: xtree::silo_output<3>::send_zones_to_silo(xtree::silo_output<3> *, int, std::vector<xtree::silo_output<3>::zone, std::allocator<xtree::silo_output<3>::zone>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(204,14)
   remark #15389: vectorization support: reference __first_480351 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(209,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/silo_output.hpp(217,30)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form

      LOOP BEGIN at ../src/silo_output.hpp(87,4) inlined into ../src/silo_output.hpp(217,30)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/silo_output.hpp(87,4) inlined into ../src/silo_output.hpp(217,30)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/silo_output.hpp(222,21)
      remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form

      LOOP BEGIN at ../src/silo_output.hpp(87,4) inlined into ../src/silo_output.hpp(222,21)
         remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/silo_output.hpp(87,4) inlined into ../src/silo_output.hpp(222,21)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at ../src/silo_output.hpp(87,4) inlined into ../src/silo_output.hpp(222,21)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(210,12)
      remark #15389: vectorization support: reference __first_481249 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/silo_output.hpp(212,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between F64 line 214 and zones line 214
      remark #15346: vector dependence: assumed ANTI dependence between zones line 214 and F64 line 214
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(222,21)
      remark #15389: vectorization support: reference __first_481249 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 3.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(230,12)
   remark #15389: vectorization support: reference __first_480351 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/silo_output.hpp(203,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::__find_if<std::vector<bool, std::allocator<bool>>::iterator, __gnu_cxx::__ops::_Iter_negate<struct lambda []>>(std::vector<bool, std::allocator<bool>>::iterator, std::vector<bool, std::allocator<bool>>::iterator, __gnu_cxx::__ops::_Iter_negate<struct lambda []>, std::random_access_iterator_tag)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(118,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: xtree::silo_output<3>::do_output(xtree::silo_output<3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/silo_output.hpp(122,30)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(128,23)
   remark #15382: vectorization support: call to function _ZNSt6vectorIdSaIdEEC1Ev cannot be vectorized
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(129,15)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.050 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(129,15)
<Remainder>
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(134,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(141,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form

   LOOP BEGIN at ../src/silo_output.hpp(142,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between coords line 143 and coords line 143
      remark #15346: vector dependence: assumed ANTI dependence between coords line 143 and coords line 143
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into ../src/silo_output.hpp(148,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/silo_output.hpp(150,39)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(150,48)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(150,48)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(150,48)
      remark #15389: vectorization support: reference __first_480351 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(150,48)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(152,38)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.

   LOOP BEGIN at ../src/silo_output.hpp(153,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_start line 154 and _M_start line 154
      remark #15346: vector dependence: assumed ANTI dependence between _M_start line 154 and _M_start line 154
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(169,28)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(169,28)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(169,28)
      remark #15388: vectorization support: reference __first_481249 has aligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.280 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into ../src/silo_output.hpp(169,28)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(172,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../src/silo_output.hpp(174,39)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/silo_output.hpp(184,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/silo_output.hpp(189,3)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/silo_output.hpp(189,3)
      remark #15389: vectorization support: reference __first_280363 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/silo_output.hpp(189,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into ../src/silo_output.hpp(189,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(394,8) inlined into ../src/silo_output.hpp(189,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_bvector.h(393,23) inlined into ../src/silo_output.hpp(189,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(189,3)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __mem_5722 line 547 and __mem_5722 line 68
   remark #15346: vector dependence: assumed FLOW dependence between U276e line 68 and U276e line 547
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(189,3)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/ext/new_allocator.h(110,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(129,15)
   remark #15382: vectorization support: call to function _ZN37_INTERNAL_15____src_main_cpp_525799769__gnu_cxx27__exchange_and_add_dispatchEPii cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(245,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between _M_refcount line 547 and _M_refcount line 245
   remark #15346: vector dependence: assumed FLOW dependence between U276a line 245 and U276a line 547
LOOP END

LOOP BEGIN at ../src/silo_output.hpp(128,23)
   remark #15382: vectorization support: call to function _ZNSt6vectorIdSaIdEED1Ev cannot be vectorized
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: xtree::tree<fmmx_node_type, 3>::tree(xtree::tree<fmmx_node_type, 3> *, xtree::tree<fmmx_node_type, 3>::component_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into ../src/tree.hpp(39,2)
   remark #15427: loop was completely unrolled
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/tree.hpp(70,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/tree.hpp(73,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/tree.hpp(52,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree_type>>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::vector(std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>> *, std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::size_type, const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 4.170 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::type, boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::load_balancer::get_ptr, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::get_base_gid(hpx::naming::gid_type *, const hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type> *, const hpx::naming::gid_type &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(681,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::load_balancer>, 0L}, hpx::components::server::create_component_action0<xtree::load_balancer>>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<xtree::tree<fmmx_node_type, 3>::silo_output_type>, 0L}, hpx::components::server::create_component_action0<xtree::tree<fmmx_node_type, 3>::silo_output_type>>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>::~vector(std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::tree<fmmx_node_type, 3>::~tree(xtree::tree<fmmx_node_type, 3> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into ../src/tree.hpp(95,10)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into ../src/tree.hpp(95,10)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<hpx::components::server::create_component_action0<fmmx_node_type>, void>::type, boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())hpx::components::server::runtime_support::create_component0<fmmx_node_type>, 0L}, hpx::components::server::create_component_action0<fmmx_node_type>>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::~node(xtree::node<fmmx_node_type, 3> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>>::pointer>(std::_Vector_base<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>>::pointer, std::_Vector_base<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::neighbors_exchange_set(xtree::node<fmmx_node_type, 3> *, xtree::dir_type<3>, const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(692,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/counting_semaphore.hpp(117,17) inlined into ../src/node.hpp(693,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(695,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into ../src/node.hpp(695,14)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(695,14)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into ../src/node.hpp(695,14)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,19) inlined into ../src/node.hpp(695,14)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into ../src/node.hpp(695,14)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into ../src/node.hpp(695,14)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(696,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(694,51)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::exchange_set<es_func>(xtree::node<fmmx_node_type, 3> *, const xtree::dir_type<3> &, xtree::node<fmmx_node_type, 3>::exchange_set_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::exchange_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::exchange_set, 0L}>::type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(635,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into ../src/node.hpp(636,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into ../src/node.hpp(636,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(639,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/counting_semaphore.hpp(117,17) inlined into ../src/node.hpp(636,21)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(637,46)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::regrid<rg_func>(xtree::node<fmmx_node_type, 3> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(527,41)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(553,50)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(553,50)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 3.450 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(553,50)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(553,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(530,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(535,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(556,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, boost::mpl::identity<bool>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::regrid<rg_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::debranch(hpx::lcos::future<void> *, xtree::node<fmmx_node_type, 3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(308,42)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(308,42)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(308,42)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(309,42)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(310,33)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(311,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(312,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(312,60)
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(314,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(310,53)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/node.hpp(306,54)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(310,41)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(323,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(323,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_debranch>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/async.hpp(125,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/async.hpp(125,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_debranch, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::debranch, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_debranch, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::debranch, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(107,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_debranch, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::debranch, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_debranch, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::debranch, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/packaged_action.hpp(117,48)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_debranch, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::debranch, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_debranch, void>::type, boost::mpl::identity<void>::type, hpx::actions::result_action0<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::debranch, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>::~vector(std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::branch(xtree::node<fmmx_node_type, 3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(288,51)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(289,33)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(291,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
LOOP END

LOOP BEGIN at ../src/location.hpp(160,3) inlined into ../src/node.hpp(291,40)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(161,9) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(161,9) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(164,9) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(164,9) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(164,9) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(161,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(161,9) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 4 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 0.700 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/location.hpp(163,3) inlined into ../src/node.hpp(291,40)
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(289,53)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(295,20)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(97,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(97,10) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 5 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(96,3) inlined into ../src/node.hpp(296,7)
LOOP END

LOOP BEGIN at ../src/node.hpp(297,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(299,10)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
      remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
      remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(289,41)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(300,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::get_base_gid(hpx::naming::gid_type *, const hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type> *, const hpx::naming::gid_type &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(681,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>> &, void, void, void, void, void, void, void>>::await_range<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<const hpx::util::tuple<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>> &, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>>::type, void>::type>(hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>> &, void, void, void, void, void, void, void>> *, boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<const hpx::util::tuple<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>> &, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>>::type, void>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<hpx::naming::id_type>, std::allocator<hpx::lcos::future<hpx::naming::id_type>>>>::type, void>::type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/wait_all.hpp(183,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::neighbors_exchange_get(xtree::node<fmmx_node_type, 3> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(738,20)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(97,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(97,10) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 5 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(96,3) inlined into ../src/node.hpp(739,6)
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(740,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(741,25)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(742,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into ../src/node.hpp(742,49)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(751,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(754,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(741,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(725,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(732,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(741,35)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, int &>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_get, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_get, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_get, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_get, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_get, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_exchange_get, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_exchange_get, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::vector(std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> *, std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::size_type, const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 4.170 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::vector(std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>> *, std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::size_type, const std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 4.170 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(279,9)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::operator=(std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> *, const std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(191,24)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(193,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(203,56)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,19) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(203,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(208,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(210,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> &, void, void, void, void, void, void, void>>::wait_all(hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>> &, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/wait_all.hpp(297,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/wait_all.hpp(297,21)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::transform<boost::range_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void>::type, std::back_insert_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>, hpx::lcos::detail::when_acquire_future<hpx::lcos::shared_future<void>>>(boost::range_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void>::type, boost::range_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void>::type, std::back_insert_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>, hpx::lcos::detail::when_acquire_future<hpx::lcos::shared_future<void>>)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(4163,12)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(4163,12)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::pointer>(std::_Vector_base<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::pointer, std::_Vector_base<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>>::await_range<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>>>::type, boost::range_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void>::type>(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>> *, boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>>>::type, boost::range_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void>::type, boost::range_iterator<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void>::type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(229,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(257,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::reserve(std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>> *, std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::size_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(73,20)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(76,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>::~vector(std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(424,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>> &, void, void, void, void, void, void, void>>::await_range<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<const hpx::util::tuple<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>> &, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>>::type, void>::type>(hpx::lcos::detail::wait_all_frame<hpx::util::tuple<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>> &, void, void, void, void, void, void, void>> *, boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<const hpx::util::tuple<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>> &, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>>::type, void>::type, boost::range_iterator<boost::unwrap_reference<const std::vector<hpx::lcos::future<bool>, std::allocator<hpx::lcos::future<bool>>>>::type, void>::type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/wait_all.hpp(183,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::neighbors_ascend(xtree::node<fmmx_node_type, 3> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(702,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(705,19)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(706,34)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(707,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(707,24)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(708,27)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(73,3) inlined into ../src/node.hpp(708,27)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(708,50)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(709,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
      remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
      remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
      remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   LOOP END

   LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(709,25)
   LOOP END
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(706,54)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(712,40)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(717,2)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(705,19)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at ../src/node.hpp(706,42)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at ../src/node.hpp(713,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(717,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(717,2)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<__gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::applier::detail::apply_helper<hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution>::call<hpx::util::tuple<__gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &, void, void, void, void, void, void, void>>(hpx::actions::continuation_type &, const hpx::naming::id_type &, hpx::naming::address::address_type, hpx::threads::thread_priority, hpx::util::tuple<__gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &, void, void, void, void, void, void, void> &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/applier/apply_helper.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/applier/apply_helper.hpp(86,25)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<__gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, __gnu_cxx::__alloc_traits<std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::value_type &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_neighbors_ascend, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::neighbors_ascend, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::get_sibling_of_child(hpx::naming::id_type *, xtree::node<fmmx_node_type, 3> *, xtree::child_index_type<3>, xtree::dir_type<3>)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(195,28)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(199,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(199,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(200,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(200,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(202,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(202,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(203,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(203,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(205,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(205,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(206,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(206,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(199,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(200,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(202,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(203,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(205,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/node.hpp(206,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/node.hpp(206,7) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 14 
   remark #15451: unmasked unaligned unit stride stores: 8 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 36 
   remark #15477: vector loop cost: 59.500 
   remark #15478: estimated potential speedup: 0.480 
   remark #15479: lightweight vector operations: 76 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(196,20)
LOOP END

LOOP BEGIN at ../src/node.hpp(197,2)
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(209,16)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921639 line 53 and j.921639 line 53
   remark #15346: vector dependence: assumed ANTI dependence between j.921639 line 53 and j.921639 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(209,21)
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::descend<dfunc>(hpx::lcos::shared_future<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *, xtree::node<fmmx_node_type, 3> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(599,44)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(600,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(617,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(522,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(526,58)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapped_type, hpx::components::detail::this_type>::operator delete(void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(548,13)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(571,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::result_action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::descend<dfunc>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>::await_range<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>, 0>::deref<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>>::type>::element>::type, void>::type>(hpx::lcos::detail::when_all_frame<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>> *, boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>>::type, boost::range_iterator<boost::unwrap_reference<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>, 0>::deref<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>>::type>::element>::type, void>::type, boost::range_iterator<boost::unwrap_reference<boost::fusion::hpx_tuple_iterator<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>, 0>::deref<boost::lazy_enable_if_c<true, boost::fusion::result_of::begin<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>>>::type>::element>::type, void>::type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(229,33)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/when_all.hpp(257,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::exchange_get<eg_func, es_func>(xtree::node<fmmx_node_type, 3> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/node.hpp(650,46)
   remark #15382: vectorization support: call to function _ZN3hpx7apply_pINS_7actions11make_actionIMN5xtree4nodeINS3_4fmmx9fmmx_nodeILm3ELm12ELm5EEELi3EEEFviEXadL_ZNS8_12exchange_getINS8_21exchange_get_functionI14future_wrapperISt8valarrayINS3_9expansionILm5EEEEEXadL_ZNS7_12exchange_getENS3_7indexerILi3ELi3ELin1EEEEEEENS8_21exchange_set_functionISI_XadL_ZNS7_12exchange_setESK_RSI_EEEEEEviEENS1_6detail9this_typeEN5boost3mpl5bool_ILb0EEEEERiEEbRKNS_6naming7id_typeENS_7threads15thread_priorityEOT0_ cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/runtime/applier/preprocessed/apply_implementations_5.hpp(99,16) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/node.hpp(660,25)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(661,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into ../src/node.hpp(661,49)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(668,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/node.hpp(671,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(59,3) inlined into ../src/node.hpp(660,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(656,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(660,35)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::ascend<afunc>(xtree::node<fmmx_node_type, 3> *, hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(565,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/node.hpp(581,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::~promise(hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/promise.hpp(572,10)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend(std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>> *, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(169,66)
   remark #15389: vectorization support: reference __b_456686 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(170,41)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(170,41)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(170,41)
<Remainder>
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/./fmmx_node.hpp(171,37)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(97,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(97,10) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 5 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(96,3) inlined into ../src/./fmmx_node.hpp(171,37)
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(175,17)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(175,17)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(176,15)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(176,15)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(178,11)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(180,30)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(180,30)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(180,30)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(180,30)
   remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 6.600 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(180,30)
<Remainder>
   remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(180,30)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(219,7) inlined into ../src/./fmmx_node.hpp(180,11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(180,11)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(180,11)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(180,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(180,11)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(183,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(183,3)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(183,3)
      remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 6.600 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(183,3)
   <Remainder>
      remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(183,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(185,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 187 and _M_data line 189
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 189 and F64 line 187
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,7) inlined into ../src/./fmmx_node.hpp(192,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./fmmx_node.hpp(200,35)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __p.1086104 line 509 and __p.1086104 line 1298
   remark #15346: vector dependence: assumed FLOW dependence between this_1086090 line 1298 and this_1086090 line 509

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./fmmx_node.hpp(200,35)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between __p.1086104 line 1297 and __p.1086104 line 1298
      remark #15346: vector dependence: assumed FLOW dependence between __p.1086104 line 1298 and __p.1086104 line 1297
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/./fmmx_node.hpp(204,14)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(212,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(212,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./fmmx_node.hpp(182,2)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/./fmmx_node.hpp(199,43)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(205,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: lambda []::operator()(xtree::expansion<5UL> *, const struct lambda [] *, const xtree::expansion<5UL> &)->void

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(195,19)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(134,33) inlined into ../src/./fmmx_node.hpp(196,25)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(134,33) inlined into ../src/./fmmx_node.hpp(196,25)
   remark #15388: vectorization support: reference U492 has aligned access   [ /usr/include/c++/4.9.0/complex(1201,24) ]
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.660 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(134,33) inlined into ../src/./fmmx_node.hpp(196,25)
<Remainder>
   remark #15387: vectorization support: scalar type occupies entire vector
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(178,3) inlined into ../src/./fmmx_node.hpp(196,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.0 line 183 and __1STRUCTVAR.0 line 183
   remark #15346: vector dependence: assumed ANTI dependence between _M_value line 183 and _M_value line 183

   LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(196,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.2 line 192 and __1STRUCTVAR.2 line 192
      remark #15346: vector dependence: assumed ANTI dependence between _M_value line 192 and _M_value line 192
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(196,25)
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(196,25)
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./fmmx_node.hpp(196,25)
   LOOP END
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(138,3) inlined into ../src/./fmmx_node.hpp(196,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between CiL_1080564 line 142 and CiL_1080564 line 165
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_value line 165 and _M_value line 142

   LOOP BEGIN at ../src/./exafmm.hpp(139,4) inlined into ../src/./fmmx_node.hpp(196,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between CiL_1080564 line 142 and CiL_1080564 line 165
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_value line 165 and _M_value line 142

      LOOP BEGIN at ../src/./exafmm.hpp(143,5) inlined into ../src/./fmmx_node.hpp(196,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1297 and _M_value line 1297

         LOOP BEGIN at ../src/./exafmm.hpp(145,6) inlined into ../src/./fmmx_node.hpp(196,25)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between CjL_1080564 line 1297 and CjL_1080564 line 1201
         LOOP END

         LOOP BEGIN at ../src/./exafmm.hpp(154,6) inlined into ../src/./fmmx_node.hpp(196,25)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between _M_value line 383 and _M_value line 1318
            remark #15346: vector dependence: assumed OUTPUT dependence between __r.1080850 line 1318 and __r.1080850 line 383
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(197,13)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(197,13)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: hpx::async<struct lambda [], std::valarray<xtree::expansion<5UL>> &>..0(boost::lazy_enable_if_c<true, hpx::detail::create_future<void (struct lambda [] *, std::valarray<xtree::expansion<5UL>> &), hpx::util::deferred_call_result_of<void (struct lambda [] *, std::valarray<xtree::expansion<5UL>> &)>>>::type *, hpx::launch::enum_type, struct lambda [] &&, std::valarray<xtree::expansion<5UL>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(115,53)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::valarray<xtree::expansion<5UL>>::resize(std::valarray<xtree::expansion<5UL>> *, std::size_t, xtree::expansion<5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::exchange_set(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *, xtree::dir_type<3>, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::exchange_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(300,66)
   remark #15389: vectorization support: reference __b_456686 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(302,2)
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(303,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./fmmx_node.hpp(303,10) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 45 
   remark #15477: vector loop cost: 30.500 
   remark #15478: estimated potential speedup: 1.160 
   remark #15479: lightweight vector operations: 11 
   remark #15480: medium-overhead vector operations: 3 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(302,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(305,72)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(306,12)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(306,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between F64 line 219 and F64 line 219
      remark #15346: vector dependence: assumed ANTI dependence between __p.1098971 line 219 and __p.1098971 line 219
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(306,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(306,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 219 and _M_data line 219
      remark #15346: vector dependence: assumed ANTI dependence between __p.1084038 line 219 and __p.1084038 line 219
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(306,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(311,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(312,37)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(308,37)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(103,3) inlined into ../src/./fmmx_node.hpp(316,11)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(317,6)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(326,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(326,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(326,5)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(326,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(326,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(326,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(326,5)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(326,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(326,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(197,2) inlined into ../src/./fmmx_node.hpp(327,44)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(328,56)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 2
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 75.000 
   remark #15478: estimated potential speedup: 0.530 
   remark #15479: lightweight vector operations: 11 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(328,56)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(330,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Peeled, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Multiversioned v1>
      remark #15388: vectorization support: reference __p.1099279 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15389: vectorization support: reference F64 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15389: vectorization support: reference F64 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 8 
      remark #15477: vector loop cost: 17.000 
      remark #15478: estimated potential speedup: 1.790 
      remark #15479: lightweight vector operations: 3 
      remark #15480: medium-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Remainder, Multiversioned v1>
      remark #15389: vectorization support: reference __p.1099279 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15389: vectorization support: reference F64 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15389: vectorization support: reference F64 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.tcc(146,3) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(145,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(331,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between F64 line 219 and F64 line 219
      remark #15346: vector dependence: assumed ANTI dependence between __p.1099305 line 219 and __p.1099305 line 219
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(331,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(334,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between  line 336 and _M_data line 336
   remark #15346: vector dependence: assumed ANTI dependence between _M_data line 336 and  line 336
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./fmmx_node.hpp(341,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __p.1086104 line 509 and __p.1086104 line 1298
   remark #15346: vector dependence: assumed FLOW dependence between this_1086090 line 1298 and this_1086090 line 509

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./fmmx_node.hpp(341,17)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between __p.1086104 line 1297 and __p.1086104 line 1298
      remark #15346: vector dependence: assumed FLOW dependence between __p.1086104 line 1298 and __p.1086104 line 1297
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(342,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(342,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(342,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(342,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(342,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(342,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./fmmx_node.hpp(323,2)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into ../src/./fmmx_node.hpp(340,43)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__valarray_fill_construct<xtree::expansion<5UL>>(xtree::expansion<5UL> *, xtree::expansion<5UL> *, const xtree::expansion<5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,68)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,68)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,68)
   remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.090 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,68)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,68)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/bits/valarray_array.h(130,7)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2L..xN2vvv.S(complex *, const complex *, const real *)

    Report from: Vector optimizations [vec]

remark #15301: FUNCTION WAS VECTORIZED   [ ../src/./exafmm.hpp(99,97) ]

LOOP BEGIN at ../src/./exafmm.hpp(100,33)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(213,3) inlined into ../src/./exafmm.hpp(103,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at ../src/./exafmm.hpp(224,4) inlined into ../src/./exafmm.hpp(103,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(104,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at ../src/./exafmm.hpp(105,4)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at ../src/./exafmm.hpp(109,5)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at ../src/./exafmm.hpp(110,6)
            remark #25460: No loop optimizations reported
         LOOP END

         LOOP BEGIN at ../src/./exafmm.hpp(117,6)
            remark #25460: No loop optimizations reported
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2L..xM2vvv.S(complex *, const complex *, const real *)

    Report from: Vector optimizations [vec]

remark #15301: FUNCTION WAS VECTORIZED   [ ../src/./exafmm.hpp(99,97) ]

LOOP BEGIN at ../src/./exafmm.hpp(100,33)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(213,3) inlined into ../src/./exafmm.hpp(103,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at ../src/./exafmm.hpp(224,4) inlined into ../src/./exafmm.hpp(103,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(104,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at ../src/./exafmm.hpp(105,4)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at ../src/./exafmm.hpp(109,5)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at ../src/./exafmm.hpp(110,6)
            remark #25460: No loop optimizations reported
         LOOP END

         LOOP BEGIN at ../src/./exafmm.hpp(117,6)
            remark #25460: No loop optimizations reported
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2L(complex *, const complex *, const real *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./exafmm.hpp(100,33)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(100,33)
   remark #15388: vectorization support: reference U48b has aligned access   [ /usr/include/c++/4.9.0/complex(1201,24) ]
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 4.660 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(100,33)
<Remainder>
   remark #15387: vectorization support: scalar type occupies entire vector
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(213,3) inlined into ../src/./exafmm.hpp(103,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.4 line 218 and __1STRUCTVAR.4 line 218
   remark #15346: vector dependence: assumed ANTI dependence between _M_value line 218 and _M_value line 218

   LOOP BEGIN at ../src/./exafmm.hpp(224,4) inlined into ../src/./exafmm.hpp(103,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.6 line 227 and __1STRUCTVAR.6 line 227
      remark #15346: vector dependence: assumed ANTI dependence between _M_value line 227 and _M_value line 227
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(224,4) inlined into ../src/./exafmm.hpp(103,3)
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(224,4) inlined into ../src/./exafmm.hpp(103,3)
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(224,4) inlined into ../src/./exafmm.hpp(103,3)
   LOOP END
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(104,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_value line 108 and L line 125
   remark #15346: vector dependence: assumed ANTI dependence between L line 125 and _M_value line 108

   LOOP BEGIN at ../src/./exafmm.hpp(105,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_value line 108 and L line 125
      remark #15346: vector dependence: assumed ANTI dependence between L line 125 and _M_value line 108

      LOOP BEGIN at ../src/./exafmm.hpp(109,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1297 and _M_value line 1297
         remark #15346: vector dependence: assumed FLOW dependence between _M_value line 1297 and _M_value line 1297

         LOOP BEGIN at ../src/./exafmm.hpp(110,6)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between CjM line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between _M_value line 1297 and CjM line 1201
         LOOP END

         LOOP BEGIN at ../src/./exafmm.hpp(117,6)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 173 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 1297 and _M_elems line 173
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<double>>::~valarray(std::valarray<std::valarray<double>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::future<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::get(hpx::traits::future_traits<hpx::lcos::future<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>, void>::result_type *, hpx::lcos::future<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(891,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(891,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(891,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type *, xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *, std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(224,66)
   remark #15389: vectorization support: reference __b_456686 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(225,41)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(225,41)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(225,41)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(226,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(226,2)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(226,2)
      remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 6.000 
      remark #15478: estimated potential speedup: 6.600 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(226,2)
   <Remainder>
      remark #15388: vectorization support: reference __first_1080237 has aligned access   [ /usr/include/c++/4.9.0/complex(1249,2) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into ../src/./fmmx_node.hpp(226,2)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(321,7) inlined into ../src/./fmmx_node.hpp(229,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(229,33)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(229,33)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into ../src/./fmmx_node.hpp(229,33)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into ../src/./fmmx_node.hpp(229,33)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(229,33)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(232,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(232,33)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./cube_poles.hpp(19,26) inlined into ../src/./fmmx_node.hpp(232,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __t.1080858 line 20 and __t.1080858 line 1316
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 1316 and _M_data line 20
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,7) inlined into ../src/./fmmx_node.hpp(233,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(233,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_value line 383 and _M_value line 1318
      remark #15346: vector dependence: assumed OUTPUT dependence between __r.1080850 line 1318 and __r.1080850 line 383
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./fmmx_node.hpp(233,3)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./fmmx_node.hpp(233,3)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into ../src/./fmmx_node.hpp(233,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __first_1096403 line 336 and __first_1096403 line 336
      remark #15346: vector dependence: assumed ANTI dependence between __result_1096403 line 336 and __result_1096403 line 336
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(334,4) inlined into ../src/./fmmx_node.hpp(233,3)
   <Remainder>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./fmmx_node.hpp(228,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: get_xtant_slice(std::gslice *, const std::valarray<std::size_t> &, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./valarray.hpp(39,35)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::async<struct lambda [], std::valarray<xtree::expansion<5UL>> &>..0(boost::lazy_enable_if_c<true, hpx::detail::create_future<void (struct lambda [] *, std::valarray<xtree::expansion<5UL>> &), hpx::util::deferred_call_result_of<void (struct lambda [] *, std::valarray<xtree::expansion<5UL>> &)>>>::type *, hpx::launch::enum_type, struct lambda [] &&, std::valarray<xtree::expansion<5UL>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(115,53)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::~fmmx_node(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(289,1)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(289,1)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(289,1)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::~fmmx_node(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(140,10)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(140,10)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(140,10)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::async<struct lambda [], std::valarray<xtree::expansion<5UL>> &>..0(boost::lazy_enable_if_c<true, hpx::detail::create_future<struct lambda [] (std::valarray<xtree::expansion<5UL>> &), hpx::util::deferred_call_result_of<struct lambda [] (std::valarray<xtree::expansion<5UL>> &)>>>::type *, hpx::launch::enum_type, struct lambda [] &&, std::valarray<xtree::expansion<5UL>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(116,13)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/preprocessed/async_5.hpp(115,53)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node_static_data<3UL, 12UL, 5UL>::~fmmx_node_static_data(xtree::fmmx::fmmx_node_static_data<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 66 and  line 66
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 66 and  line 66

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 66 and  line 66
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 66 and  line 66

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 66 and  line 66
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 66 and  line 66

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(30,8)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::call_once<void (*)()>(hpx::lcos::local::once_flag &, void (*)())

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(82,25)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(82,25)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(50,9)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/event.hpp(79,17) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/once.hpp(82,25)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_factory_hpx_silo_output_type::hpx_plugin_exporter_factory_hpx_silo_output_type(<unnamed>::hpx_plugin_exporter_factory_hpx_silo_output_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/main.cpp(20,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/main.cpp(20,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_registry_hpx_silo_output_type::hpx_plugin_exporter_registry_hpx_silo_output_type(<unnamed>::hpx_plugin_exporter_registry_hpx_silo_output_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/main.cpp(20,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/main.cpp(20,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_factory_hpx_tree_type::hpx_plugin_exporter_factory_hpx_tree_type(<unnamed>::hpx_plugin_exporter_factory_hpx_tree_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/main.cpp(20,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/main.cpp(20,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_registry_hpx_tree_type::hpx_plugin_exporter_registry_hpx_tree_type(<unnamed>::hpx_plugin_exporter_registry_hpx_tree_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/main.cpp(20,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/main.cpp(20,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_factory_hpx_fmmx_node_type::hpx_plugin_exporter_factory_hpx_fmmx_node_type(<unnamed>::hpx_plugin_exporter_factory_hpx_fmmx_node_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/main.cpp(20,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/main.cpp(20,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: <unnamed>::hpx_plugin_exporter_registry_hpx_fmmx_node_type::hpx_plugin_exporter_registry_hpx_fmmx_node_type(<unnamed>::hpx_plugin_exporter_registry_hpx_fmmx_node_type *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,22) inlined into ../src/main.cpp(20,1)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into ../src/main.cpp(20,1)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: __sti___ZN3hpx4lcos5local13spinlock_poolINS_6naming8gid_type3tagEE5pool_E()

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock_pool.hpp(88,47)
<Peeled>
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock_pool.hpp(88,47)
   remark #15389: vectorization support: reference U3d52 has unaligned access   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(108,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(108,9) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 1.130 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock_pool.hpp(88,47)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::array<complex, 625UL>::array(std::array<complex, 625UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12)
   remark #15388: vectorization support: reference U911 has aligned access   [ /usr/include/c++/4.9.0/complex(1201,24) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 7.160 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12)
<Remainder>
   remark #15388: vectorization support: reference U911 has aligned access   [ /usr/include/c++/4.9.0/complex(1201,24) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node_static_data<3UL, 12UL, 5UL>::fmmx_node_static_data(xtree::fmmx::fmmx_node_static_data<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(38,18)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(39,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(40,20)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(42,39)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(42,39)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(42,39)
<Remainder>
LOOP END

LOOP BEGIN at ../src/indexer.hpp(70,3) inlined into ../src/./fmmx_node.hpp(44,23)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/indexer.hpp(71,11) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/indexer.hpp(71,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 0.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(47,4)
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(49,12) ]
   remark #15389: vectorization support: reference I64 has unaligned access   [ ../src/./fmmx_node.hpp(50,10) ]
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(53,13) ]
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(55,13) ]
   remark #15389: vectorization support: reference I64 has unaligned access   [ ../src/./fmmx_node.hpp(57,10) ]
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(49,12) ]
   remark #15389: vectorization support: reference I64 has unaligned access   [ ../src/./fmmx_node.hpp(50,10) ]
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(53,13) ]
   remark #15389: vectorization support: reference _M_data has unaligned access   [ ../src/./fmmx_node.hpp(55,13) ]
   remark #15389: vectorization support: reference I64 has unaligned access   [ ../src/./fmmx_node.hpp(57,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./fmmx_node.hpp(57,10) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 4 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 52.000 
   remark #15478: estimated potential speedup: 0.590 
   remark #15479: lightweight vector operations: 41 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(60,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(60,24)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./fmmx_node.hpp(64,29)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./fmmx_node.hpp(64,29)
   remark #15389: vectorization support: reference U284f has unaligned access   [ ../src/./valarray.hpp(84,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(84,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./fmmx_node.hpp(64,29)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./fmmx_node.hpp(65,33)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./fmmx_node.hpp(65,33)
   remark #15389: vectorization support: reference U2851 has unaligned access   [ ../src/./valarray.hpp(84,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(84,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./fmmx_node.hpp(65,33)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(69,51)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/./fmmx_node.hpp(73,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between _M_data line 50 and _M_data line 73
      remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 73 and _M_elems line 50

      LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(72,34)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
         remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
         remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
      LOOP END

      LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(72,34)
      LOOP END

      LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(72,34)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/./fmmx_node.hpp(82,19)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(83,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/./fmmx_node.hpp(83,45)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(83,28)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(83,28)
      remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(83,28)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(84,84)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/./fmmx_node.hpp(85,24)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(86,24)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/./fmmx_node.hpp(86,54)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(86,33)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(86,33)
      remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(86,33)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(87,97)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/./fmmx_node.hpp(90,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/./fmmx_node.hpp(90,4)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../src/indexer.hpp(51,3) inlined into ../src/./fmmx_node.hpp(66,49)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j.921802 line 53 and j.921802 line 53
   remark #15346: vector dependence: assumed FLOW dependence between j.921802 line 53 and j.921802 line 53
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(94,50)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_iterator_base_funcs.h(80,7) inlined into ../src/./fmmx_node.hpp(101,38)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(101,21)
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(101,21)
      remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 0.820 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(101,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/./fmmx_node.hpp(103,3)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(103,3)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./fmmx_node.hpp(44,33)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at ../src/./fmmx_node.hpp(66,54)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(92,49)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::__valarray_max<std::_UnClos<std::_Abs, std::_Expr, std::_BinClos<std::__minus, std::_ValArray, std::_ValArray, signed int, signed int>>>(const std::_UnClos<std::_Abs, std::_Expr, std::_BinClos<std::__minus, std::_ValArray, std::_ValArray, signed int, signed int>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
   remark #15389: vectorization support: reference SI32 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15389: vectorization support: reference SI32 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 14 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 5.000 
   remark #15479: lightweight vector operations: 8 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::__valarray_max<std::_UnClos<std::_Abs, std::_Expr, std::_BinClos<std::__minus, std::_Expr, std::_Expr, std::_BinClos<std::__divides, std::_ValArray, std::_Constant, signed int, signed int>, std::_BinClos<std::__divides, std::_ValArray, std::_Constant, signed int, signed int>>>>(const std::_UnClos<std::_Abs, std::_Expr, std::_BinClos<std::__minus, std::_Expr, std::_Expr, std::_BinClos<std::__divides, std::_ValArray, std::_Constant, signed int, signed int>, std::_BinClos<std::__divides, std::_ValArray, std::_Constant, signed int, signed int>>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
   remark #15389: vectorization support: reference SI32 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15389: vectorization support: reference SI32 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 56 
   remark #15477: vector loop cost: 53.500 
   remark #15478: estimated potential speedup: 1.040 
   remark #15479: lightweight vector operations: 10 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15482: vectorized math library calls: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::__copy_move<false, false, std::__iterator_traits<std::_Iter_base<std::list<std::size_t, std::allocator<std::_Bit_type>>::iterator, false>::iterator_type, true>::iterator_category>::__copy_m<std::_Iter_base<std::list<std::size_t, std::allocator<std::_Bit_type>>::iterator, false>::iterator_type, std::_Iter_base<std::_Bit_type *, false>::iterator_type>(std::_Iter_base<std::list<std::size_t, std::allocator<std::_Bit_type>>::iterator, false>::iterator_type, std::_Iter_base<std::list<std::size_t, std::allocator<std::_Bit_type>>::iterator, false>::iterator_type, std::_Iter_base<std::_Bit_type *, false>::iterator_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(305,19)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::__valarray_max<std::_UnClos<std::_Abs, std::_Expr, std::_BinClos<std::__minus, std::_ValArray, std::_ValArray, double, double>>>(const std::_UnClos<std::_Abs, std::_Expr, std::_BinClos<std::__minus, std::_ValArray, std::_ValArray, double, double>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
   remark #15389: vectorization support: reference F64 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15388: vectorization support: reference F64 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 17 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 4.060 
   remark #15479: lightweight vector operations: 7 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Remainder>
   remark #15389: vectorization support: reference F64 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15388: vectorization support: reference F64 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(392,4) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(389,7)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: xtree::indexer<3, 3, -1>::operator int(const xtree::indexer<3, 3, -1> *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(51,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between j line 53 and j line 53
   remark #15346: vector dependence: assumed FLOW dependence between j line 53 and j line 53
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<std::size_t>>::resize(std::valarray<std::valarray<std::size_t>> *, std::size_t, std::valarray<std::size_t> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<double>>::resize(std::valarray<std::valarray<double>> *, std::size_t, std::valarray<double> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: xtree::indexer<3, 3, -1>::operator++(xtree::indexer<3, 3, -1> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/indexer.hpp(59,3)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::transform<std::valarray<double> *, std::valarray<double> *, struct lambda []>(std::valarray<double> *, std::valarray<double> *, std::valarray<double> *, struct lambda [])

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(4162,7)
   remark #15382: vectorization support: call to function _Znwm cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(53,12) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 695 and __result line 739
   remark #15346: vector dependence: assumed FLOW dependence between __result line 739 and __first line 695

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(4163,24)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between corner line 219 and corner line 219
      remark #15346: vector dependence: assumed ANTI dependence between __p.1084038 line 219 and __p.1084038 line 219
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into /usr/include/c++/4.9.0/bits/stl_algo.h(4163,24)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<double>>::operator=(std::valarray<std::valarray<double>> *, std::valarray<std::valarray<double>> &&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(736,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: create_position_array(std::valarray<std::valarray<double>> *, std::valarray<std::size_t> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(93,11)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(93,11)
   remark #15389: vectorization support: reference U3cac has unaligned access   [ ../src/./valarray.hpp(84,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(84,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(93,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./valarray.hpp(93,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./valarray.hpp(93,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./valarray.hpp(94,49)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 2
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 20 
   remark #15477: vector loop cost: 75.000 
   remark #15478: estimated potential speedup: 0.530 
   remark #15479: lightweight vector operations: 11 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./valarray.hpp(94,49)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(95,35)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(96,11)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(96,11)
      <Peeled>
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(96,11)
         remark #15388: vectorization support: reference __b_456686 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 3 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 1.280 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(96,11)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(99,45)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(99,30)
   <Peeled>
   LOOP END

   LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(99,30)
      remark #15389: vectorization support: reference U3cae has unaligned access   [ ../src/./valarray.hpp(84,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(84,3) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 14.000 
      remark #15478: estimated potential speedup: 1.110 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(99,30)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(100,8)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(100,8)
      <Peeled>
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(100,8)
         remark #15388: vectorization support: reference __b_456686 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 3 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 1.280 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./valarray.hpp(100,8)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(103,37)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(111,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algo.h(1155,7) inlined into ../src/./valarray.hpp(111,23)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(112,28)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(112,28)
   remark #15389: vectorization support: reference U3cb2 has unaligned access   [ ../src/./valarray.hpp(84,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(84,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(112,28)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./valarray.hpp(113,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between F64 line 219 and F64 line 219
   remark #15346: vector dependence: assumed ANTI dependence between __p.457166 line 219 and __p.457166 line 219
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into ../src/./valarray.hpp(113,41)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(115,6)
<Peeled>
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(115,6)
   remark #15389: vectorization support: reference U3cb2 has unaligned access   [ ../src/./valarray.hpp(84,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/./valarray.hpp(84,3) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./valarray.hpp(83,35) inlined into ../src/./valarray.hpp(115,6)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./valarray.hpp(115,6)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   <Peeled, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   <Multiversioned v1>
      remark #15388: vectorization support: reference __p.457129 has aligned access
      remark #15388: vectorization support: reference __p.457129 has aligned access
      remark #15389: vectorization support: reference __q.457130 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 11.000 
      remark #15478: estimated potential speedup: 1.730 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   <Remainder, Multiversioned v1>
      remark #15388: vectorization support: reference __p.457129 has aligned access
      remark #15388: vectorization support: reference __p.457129 has aligned access
      remark #15389: vectorization support: reference __q.457130 has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   <Remainder, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./valarray.hpp(114,13)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./valarray.hpp(114,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./valarray.hpp(118,2)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./valarray.hpp(106,37)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at ../src/./valarray.hpp(109,35)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<std::valarray<std::size_t>>>::~valarray(std::valarray<std::valarray<std::valarray<std::size_t>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __b_1082595 line 702 and  line 66
   remark #15346: vector dependence: assumed FLOW dependence between  line 66 and __b_1082595 line 702

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::list<std::size_t, std::allocator<std::_Bit_type>>::~list(std::list<std::size_t, std::allocator<std::_Bit_type>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<std::valarray<std::size_t>>>::resize(std::valarray<std::valarray<std::valarray<std::size_t>>> *, std::size_t, std::valarray<std::valarray<std::size_t>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __b_1082595 line 702 and  line 66
   remark #15346: vector dependence: assumed FLOW dependence between  line 66 and __b_1082595 line 702

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<std::size_t>>::~valarray(std::valarray<std::valarray<std::size_t>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::exafmm_kernel(exafmm_kernel<5L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./exafmm.hpp(251,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 252 and _M_elems line 252
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(255,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/./exafmm.hpp(256,4)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/./exafmm.hpp(260,5)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(260,5)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(260,5)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(263,5)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(263,5)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(263,5)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(266,5)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(266,5)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(266,5)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(269,5)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(269,5)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(269,5)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(276,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/./exafmm.hpp(277,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.8 line 284 and __1STRUCTVAR.8 line 282
      remark #15346: vector dependence: assumed ANTI dependence between _M_value line 282 and _M_value line 284

      LOOP BEGIN at ../src/./exafmm.hpp(278,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.8 line 284 and __1STRUCTVAR.8 line 282
         remark #15346: vector dependence: assumed ANTI dependence between _M_value line 282 and _M_value line 284

         LOOP BEGIN at ../src/./exafmm.hpp(279,6)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.8 line 284 and __1STRUCTVAR.8 line 282
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 282 and _M_value line 284
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cube_poles<5L>::cube_poles(cube_poles<5L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./exafmm.hpp(251,3) inlined into ../src/./cube_poles.hpp(25,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 252 and _M_elems line 252
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(255,3) inlined into ../src/./cube_poles.hpp(25,20)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/./exafmm.hpp(256,4) inlined into ../src/./cube_poles.hpp(25,20)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/./exafmm.hpp(260,5) inlined into ../src/./cube_poles.hpp(25,20)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(260,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(260,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(263,5) inlined into ../src/./cube_poles.hpp(25,20)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(263,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(263,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(266,5) inlined into ../src/./cube_poles.hpp(25,20)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(266,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(266,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(269,5) inlined into ../src/./cube_poles.hpp(25,20)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(269,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(269,5) inlined into ../src/./cube_poles.hpp(25,20)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/./exafmm.hpp(276,3) inlined into ../src/./cube_poles.hpp(25,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/./exafmm.hpp(277,4) inlined into ../src/./cube_poles.hpp(25,20)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.8 line 284 and __1STRUCTVAR.8 line 282
      remark #15346: vector dependence: assumed ANTI dependence between _M_value line 282 and _M_value line 284

      LOOP BEGIN at ../src/./exafmm.hpp(278,5) inlined into ../src/./cube_poles.hpp(25,20)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.8 line 284 and __1STRUCTVAR.8 line 282
         remark #15346: vector dependence: assumed ANTI dependence between _M_value line 282 and _M_value line 284

         LOOP BEGIN at ../src/./exafmm.hpp(279,6) inlined into ../src/./cube_poles.hpp(25,20)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between __1STRUCTVAR.8 line 284 and __1STRUCTVAR.8 line 282
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 282 and _M_value line 284
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into ../src/./cube_poles.hpp(27,30)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into ../src/./cube_poles.hpp(27,30)
   remark #15388: vectorization support: reference U915 has aligned access   [ /usr/include/c++/4.9.0/complex(1201,24) ]
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 6.420 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into ../src/./cube_poles.hpp(27,30)
<Remainder>
   remark #15387: vectorization support: scalar type occupies entire vector
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./cube_poles.hpp(28,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(111,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./cube_poles.hpp(28,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./cube_poles.hpp(29,5)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(111,4) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into ../src/./cube_poles.hpp(29,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(219,7) inlined into ../src/./cube_poles.hpp(32,5)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/./cube_poles.hpp(34,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between U4ae line 38 and U4ae line 38
   remark #15346: vector dependence: assumed ANTI dependence between U4ae line 38 and U4ae line 38
LOOP END

LOOP BEGIN at ../src/./cube_poles.hpp(45,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./cube_poles.hpp(50,33)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./cube_poles.hpp(50,33)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./cube_poles.hpp(51,39)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into ../src/./cube_poles.hpp(51,39)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(675,4) inlined into ../src/./cube_poles.hpp(55,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between __p.1083610 line 1316 and __p.1083610 line 1297
      remark #15346: vector dependence: assumed ANTI dependence between __t.1080858 line 1297 and __t.1080858 line 1316
   LOOP END

   LOOP BEGIN at ../src/./exafmm.hpp(178,3) inlined into ../src/./cube_poles.hpp(54,14)

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./cube_poles.hpp(54,14)
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./cube_poles.hpp(54,14)
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./cube_poles.hpp(54,14)
      LOOP END

      LOOP BEGIN at ../src/./exafmm.hpp(189,4) inlined into ../src/./cube_poles.hpp(54,14)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(677,4) inlined into ../src/./cube_poles.hpp(60,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __t.1080858 line 1318 and __t.1080858 line 1316
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(677,4) inlined into ../src/./cube_poles.hpp(60,5)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./cube_poles.hpp(62,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_value line 323 and _M_value line 64
   remark #15346: vector dependence: assumed ANTI dependence between __r.1083707 line 64 and __r.1083707 line 323

   LOOP BEGIN at ../src/./cube_poles.hpp(63,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between _M_value line 323 and _M_value line 64
      remark #15346: vector dependence: assumed ANTI dependence between __r.1083707 line 64 and __r.1083707 line 323
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./cube_poles.hpp(67,6)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./cube_poles.hpp(67,6)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./cube_poles.hpp(67,6)
      remark #15388: vectorization support: reference __b_456686 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.280 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./cube_poles.hpp(67,6)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../src/./cube_poles.hpp(68,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this line 70 and this line 71
   remark #15346: vector dependence: assumed FLOW dependence between this line 71 and this line 70

   LOOP BEGIN at ../src/./cube_poles.hpp(69,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between this line 70 and this line 71
      remark #15346: vector dependence: assumed FLOW dependence between this line 71 and this line 70
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../src/./cube_poles.hpp(43,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at ../src/./cube_poles.hpp(44,4)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<std::valarray<double>>>::resize(std::valarray<std::valarray<std::valarray<double>>> *, std::size_t, std::valarray<std::valarray<double>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __b_1082581 line 702 and  line 66
   remark #15346: vector dependence: assumed FLOW dependence between  line 66 and __b_1082581 line 702

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1021,7)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,62)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(110,2) inlined into /usr/include/c++/4.9.0/valarray(1028,7)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::valarray<std::valarray<std::valarray<double>>>::~valarray(std::valarray<std::valarray<std::valarray<double>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __b_1082581 line 702 and  line 66
   remark #15346: vector dependence: assumed FLOW dependence between  line 66 and __b_1082581 line 702

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /usr/include/c++/4.9.0/valarray(702,7)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::pointer>(std::_Vector_base<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::pointer, std::_Vector_base<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>>::pointer>(std::_Vector_base<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>>::pointer, std::_Vector_base<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>::pointer>(std::_Vector_base<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>::pointer, std::_Vector_base<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>::pointer)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END

   LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /usr/include/c++/4.9.0/bits/stl_construct.h(103,6)
      remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>>::~list(std::list<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>, std::allocator<boost::shared_ptr<hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::heap_type>>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /usr/include/c++/4.9.0/bits/stl_list.h(447,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::intrusive_ptr<hpx::lcos::detail::promise<void, hpx::util::unused_type>>::~intrusive_ptr(boost::intrusive_ptr<hpx::lcos::detail::promise<void, hpx::util::unused_type>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/boost/smart_ptr/intrusive_ptr.hpp(97,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::traits::future_access<hpx::lcos::future<void>, void>::create<hpx::lcos::detail::promise<void, hpx::util::unused_type>>(hpx::lcos::future<void> *, hpx::lcos::detail::promise<void, hpx::util::unused_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(88,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::reset_queue_entry::~reset_queue_entry(hpx::lcos::local::detail::condition_variable::reset_queue_entry *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(61,24)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::~managed_component(hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __mem_5722 line 547 and __mem_5722 line 68
   remark #15346: vector dependence: assumed FLOW dependence between __first_306759 line 68 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::create(std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(581,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(590,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::~managed_component(hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::~managed_component(hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(460,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::create(std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(581,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(583,26)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(583,26)
      <Peeled>
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(583,26)
         remark #15389: vectorization support: reference __first_699852 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
         remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 2 
         remark #15477: vector loop cost: 0.750 
         remark #15478: estimated potential speedup: 1.450 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(583,26)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(575,29)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(575,29)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(575,29)
      remark #15389: vectorization support: reference __first_699852 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(575,29)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(590,17)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::free(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, void *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(290,13)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(269,55)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::silo_output<3>::~silo_output(xtree::silo_output<3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into ../src/silo_output.hpp(115,2)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into ../src/silo_output.hpp(115,2)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/silo_output.hpp(115,2)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __mem_5722 line 547 and __mem_5722 line 68
   remark #15346: vector dependence: assumed FLOW dependence between __first_306759 line 68 and __first_306759 line 547
LOOP END
===========================================================================

Begin optimization report for: xtree::tree<fmmx_node_type, 3>::~tree(xtree::tree<fmmx_node_type, 3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/array(81,12) inlined into ../src/tree.hpp(100,2)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into ../src/tree.hpp(100,2)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock>::alloc(hpx::util::one_size_heap_list<hpx::components::detail::fixed_wrapper_heap<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type, hpx::lcos::local::spinlock>, hpx::lcos::local::spinlock> *, std::size_t)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/format/feed_args.hpp(298,17) inlined into /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(179,21)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/util/one_size_heap_list.hpp(120,63)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::~task_base(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(461,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>(std::_Vector_base<std::string, std::allocator<std::string>>::pointer, std::_Vector_base<std::string, std::allocator<std::string>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first line 547 and  line 249
   remark #15346: vector dependence: assumed FLOW dependence between  line 249 and __first line 547
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::~node(xtree::node<fmmx_node_type, 3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(265,1)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(265,1)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(265,1)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(265,1)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(265,1)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::~node(xtree::node<fmmx_node_type, 3> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(257,29)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::async<xtree::node<fmmx_node_type, 3>::action_local<init_func>, int &>..0(hpx::lcos::future<void> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/async_5.hpp(91,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::destroy<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>(const hpx::naming::gid_type &, const hpx::naming::address &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/destroy_component.hpp(58,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/destroy_component.hpp(58,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/destroy_component.hpp(58,9)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, const hpx::naming::gid_type &, const hpx::util::function_nonser<void (void *)> &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(83,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, const hpx::util::function_nonser<void (void *)> &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(54,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, std::size_t, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(26,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(611,13) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
      remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, const hpx::naming::gid_type &, const hpx::util::function_nonser<void (void *)> &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(83,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, const hpx::util::function_nonser<void (void *)> &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(54,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, std::size_t, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(581,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(24,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(26,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(611,13) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(590,17) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(24,48)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, const hpx::naming::gid_type &, const hpx::util::function_nonser<void (void *)> &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(83,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, const hpx::util::function_nonser<void (void *)> &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(54,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::components::server::create<hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>>(hpx::naming::gid_type *, std::size_t, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/wrapper_heap_list.hpp(37,61) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(26,35)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/managed_component_base.hpp(611,13) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/components/server/create_component.hpp(35,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::make_error_future<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::type *), void>::type>(hpx::lcos::future<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, const boost::exception_ptr &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(1189,12)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<const boost::system::error_code &, const hpx::parcelset::parcel &, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>>::type &, const boost::system::error_code &, const hpx::parcelset::parcel &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::invoke_r<hpx::util::detail::bind_invoke_impl<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>, hpx::util::tuple<boost::system::error_code &&, hpx::parcelset::parcel &&, void, void, void, void, void, void>, void>::type, void, boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, const boost::system::error_code &, const hpx::parcelset::parcel &, boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code, hpx::parcelset::parcel>(void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), boost::mpl::identity<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>>::type &, boost::system::error_code &&, hpx::parcelset::parcel &&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/preprocessed/invoke_5.hpp(408,36)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::string_stub_dump<boost::error_info<boost::tag_original_exception_type, const std::type_info *>>(std::string *, const boost::error_info<boost::tag_original_exception_type, const std::type_info *> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/exception/detail/object_hex_dump.hpp(40,52) inlined into /home/dmarce1/packages/intel64/include/boost/exception/to_string_stub.hpp(85,27)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::init_grid(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(399,38)
   remark #15389: vectorization support: reference __b_456686 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 3 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.750 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(401,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/./fmmx_node.hpp(402,50)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/./fmmx_node.hpp(402,50)
      remark #15389: vectorization support: reference __s.1101127 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15388: vectorization support: reference x0 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15389: vectorization support: reference __s.1101127 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15388: vectorization support: reference x0 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15301: REVERSED LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 17 
      remark #15477: vector loop cost: 23.000 
      remark #15478: estimated potential speedup: 2.670 
      remark #15479: lightweight vector operations: 10 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/./fmmx_node.hpp(402,50)
   <Remainder>
      remark #15389: vectorization support: reference __s.1101127 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15388: vectorization support: reference x0 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15389: vectorization support: reference __s.1101127 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15388: vectorization support: reference x0 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/./fmmx_node.hpp(402,50)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::initialize(xtree::fmmx::fmmx_node<3UL, 12UL, 5UL> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into ../src/./fmmx_node.hpp(150,41)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 0.540 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into ../src/./fmmx_node.hpp(151,4)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/./fmmx_node.hpp(152,22)
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(129,7) ]
   remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/location.hpp(129,7) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/location.hpp(129,7) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 1.200 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/location.hpp(128,3) inlined into ../src/./fmmx_node.hpp(152,22)
<Remainder>
LOOP END

LOOP BEGIN at ../src/./fmmx_node.hpp(153,36)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between F64 line 155 and F64 line 155

   LOOP BEGIN at ../src/./fmmx_node.hpp(154,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::local<init_func>(xtree::node<fmmx_node_type, 3> *, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(511,29) inlined into ../src/node.hpp(506,54)
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 26.000 
   remark #15478: estimated potential speedup: 3.140 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(506,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(506,11)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(507,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(521,2)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: xtree::node<fmmx_node_type, 3>::initialize(xtree::node<fmmx_node_type, 3> *, const xtree::location<3> &, hpx::naming::id_type *, xtree::tree<fmmx_node_type, 3> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(239,12)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(240,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(242,14)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/node.hpp(243,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(247,11)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../src/node.hpp(248,2)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(220,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(223,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at ../src/node.hpp(228,3)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into ../src/node.hpp(240,9)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END

LOOP BEGIN at ../src/node.hpp(241,2)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::tree<fmmx_node_type, 3> *>::wait_until(hpx::lcos::detail::future_data<xtree::tree<fmmx_node_type, 3> *> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::tree<fmmx_node_type, 3> *>::wait(hpx::lcos::detail::future_data<xtree::tree<fmmx_node_type, 3> *> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::wait(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::wait(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::set_result<hpx::lcos::detail::when_all_result<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>, void>::type>(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *, hpx::lcos::detail::when_all_result<hpx::util::tuple<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>, void, void, void, void, void, void, void>, void>::type &&, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(243,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::wait_until(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::wait(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::reset(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::wait_until(hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::wait(hpx::lcos::detail::future_data<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::shared_future<void>, hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, void, void, void, void, void, void>>::wait_until(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::shared_future<void>, hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, void, void, void, void, void, void>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::shared_future<void>, hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, void, void, void, void, void, void>>::wait(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::shared_future<void>, hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>, void, void, void, void, void, void>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::wait_until(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(522,51)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(522,51)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::wait(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(512,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(512,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::get_result(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(501,18)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type>::execute_deferred(hpx::lcos::detail::task_base<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(494,18)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::set_result<boost::exception_ptr>(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, boost::exception_ptr &&, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(243,23)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::set_result<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::result_type>::value_type>(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::result_type>::value_type &&, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(243,23)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::wait_until(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::wait(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::reset(hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::wait_until(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>>::wait(hpx::lcos::detail::future_data<hpx::util::tuple<hpx::lcos::future<void>, hpx::lcos::shared_future<void>, void, void, void, void, void, void>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::set_result<hpx::lcos::detail::when_all_result<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>, void>::type>(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *, hpx::lcos::detail::when_all_result<hpx::util::tuple<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>, void, void, void, void, void, void, void>, void>::type &&, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(243,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::wait_until(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::wait(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::reset(hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(306,19)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::set_result<hpx::lcos::detail::when_all_result<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>, void>::type>(hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>> *, hpx::lcos::detail::when_all_result<hpx::util::tuple<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>, void, void, void, void, void, void, void>, void>::type &&, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(243,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::wait_until(hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::wait(hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<fmmx_node_type *>::wait_until(hpx::lcos::detail::future_data<fmmx_node_type *> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<fmmx_node_type *>::wait(hpx::lcos::detail::future_data<fmmx_node_type *> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::load_balancer *>::wait_until(hpx::lcos::detail::future_data<xtree::load_balancer *> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<xtree::load_balancer *>::wait(hpx::lcos::detail::future_data<xtree::load_balancer *> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::naming::id_type>::wait_until(hpx::lcos::detail::future_data<hpx::naming::id_type> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<hpx::naming::id_type>::wait(hpx::lcos::detail::future_data<hpx::naming::id_type> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<bool>::wait_until(hpx::lcos::detail::future_data<bool> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<bool>::wait(hpx::lcos::detail::future_data<bool> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<void>::wait_until(hpx::lcos::detail::task_base<void> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(522,51)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(522,51)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<void>::wait(hpx::lcos::detail::task_base<void> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(512,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(512,44)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<void>::get_result(hpx::lcos::detail::task_base<void> *, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(501,18)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::task_base<void>::execute_deferred(hpx::lcos::detail::task_base<void> *, hpx::error_code &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(494,18)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<void>::wait_until(hpx::lcos::detail::future_data<void> *, const boost::chrono::steady_clock::time_point &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(361,27)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::detail::future_data<void>::wait(hpx::lcos::detail::future_data<void> *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/detail/future_data.hpp(342,23)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::~task_object(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::~task_object(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::do_run(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/./fmmx_node.hpp(351,5) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between I64 line 352 and I64 line 363
   remark #15346: vector dependence: assumed FLOW dependence between U2f0b line 363 and U2f0b line 352
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   remark #15389: vectorization support: reference __b_700392 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(122,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.290 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(121,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,27)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::~task_object(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::~task_object(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::do_run(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,27)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::~task_object(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::~task_object(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(37,16)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>>::do_run(hpx::lcos::local::detail::task_object<boost::detail::cpp0x_result_of_impl<void (hpx::util::decay<struct lambda []>::type *, hpx::util::detail::decay_unwrap<std::valarray<xtree::expansion<5UL>> &, hpx::util::decay<std::valarray<xtree::expansion<5UL>> &>::type>::type *), void>::type, hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.tcc(218,7) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
      remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(79,4) ]
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(78,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
      remark #15388: vectorization support: reference __b_700715 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15389: vectorization support: reference __a_700715 has unaligned access   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/valarray_array.h(252,5) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 5 
      remark #15477: vector loop cost: 4.500 
      remark #15478: estimated potential speedup: 1.090 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(251,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(145,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,40)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/packaged_task.hpp(65,27)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::wait<hpx::lcos::local::spinlock::scoped_lock>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::spinlock::scoped_lock &, const char *, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(220,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/intrusive/detail/common_slist_algorithms.hpp(37,26) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(217,25)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::notify_all<hpx::lcos::local::spinlock::scoped_lock>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::spinlock::scoped_lock &, hpx::error_code &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(140,13)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::local::detail::condition_variable::abort_all<hpx::lcos::local::no_mutex>(hpx::lcos::local::detail::condition_variable *, hpx::lcos::local::no_mutex &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/detail/condition_variable.hpp(171,13)
   remark #15529: loop was not vectorized: volatile assignment was not vectorized. Try using non-volatile assignment.   [ /home/dmarce1/packages/intel64/include/hpx/runtime/threads/detail/tagged_thread_state.hpp(39,24) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::invalidate::~invalidate(hpx::lcos::future<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::invalidate *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_local<init_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::local<init_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_local<init_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::local<init_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(26,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_local<init_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::local<init_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<int &>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_local<init_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::local<init_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, int &)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(16,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_local<init_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::local<init_func>, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_local<init_func>, void>::type, boost::mpl::identity<void>::type, hpx::actions::action1<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::local<init_func>, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::future<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::invalidate::~invalidate(hpx::lcos::future<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::invalidate *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::invalidate::~invalidate(hpx::lcos::future<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::invalidate *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/future.hpp(751,39)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<const xtree::location<3> &, const hpx::naming::id_type &, xtree::tree<fmmx_node_type, 3> *>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, hpx::naming::address &&, const hpx::naming::id_type &, const xtree::location<3> &, const hpx::naming::id_type &, xtree::tree<fmmx_node_type, 3> *&&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(164,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution>::apply<const xtree::location<3> &, const hpx::naming::id_type &, xtree::tree<fmmx_node_type, 3> *>(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution> *, hpx::launch::enum_type, const hpx::naming::id_type &, const xtree::location<3> &, const hpx::naming::id_type &, xtree::tree<fmmx_node_type, 3> *&&)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/lcos/preprocessed/packaged_action_constructors_5.hpp(154,44)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution> *const)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution>::~packaged_action(hpx::lcos::packaged_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::type, boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::result_action3<struct <unnamed>, {(void (*)())xtree::node<fmmx_node_type, 3>::initialize, 0L}, hpx::actions::detail::this_type>::direct_execution> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/hpx_fwd.hpp(698,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::actions::detail::action_registration<hpx::actions::transfer_action<action0_initialize>>::create(boost::shared_ptr<hpx::actions::base_action> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
      remark #15389: vectorization support: reference __first_699852 has unaligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15381: vectorization support: unaligned access used inside loop body   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(704,3) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 2 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 1.450 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(703,7) inlined into /home/dmarce1/packages/intel64/include/hpx/runtime/actions/action_support.hpp(177,17)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::add_msg(const hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type> *, const hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1259,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/cache_before_init.hpp(138,47)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/cache_before_init.hpp(139,22)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/cache_before_init.hpp(139,22)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between this_328958 line 71 and this_328958 line 547
   remark #15346: vector dependence: assumed ANTI dependence between this_328958 line 547 and this_328958 line 71
LOOP END
===========================================================================

Begin optimization report for: hpx::util::logging::gather_holder<hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::self_type, hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::gather_type>::gather_holder(hpx::util::logging::gather_holder<hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::self_type, hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::gather_type> *, const hpx::util::logging::logger<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type, hpx::util::logging::default_>::self_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/basic_ios.h(454,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/logger.hpp(34,9)
   remark #15389: vectorization support: reference this_282571 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/basic_ios.h(454,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/logger.hpp(34,9)
   remark #15389: vectorization support: reference this_282571 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/streambuf(463,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/logging/detail/logger.hpp(34,9)
   remark #15389: vectorization support: reference this_282590 has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 3
   remark #15301: BLOCK WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 1.140 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::result_type>::~value_or_error(hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>, std::allocator<hpx::lcos::future<xtree::node<fmmx_node_type, 3>::ascend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend, 0L}>::type>>>>::result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/value_or_error.hpp(100,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>::~deferred_call_impl(hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/util/deferred_call.hpp(37,15)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>::~deferred_call_impl(hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/util/deferred_call.hpp(37,15)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>>::~deferred_call_impl(hpx::util::detail::deferred_call_impl<struct lambda [], hpx::util::tuple<std::valarray<xtree::expansion<5UL>>, void, void, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/util/deferred_call.hpp(37,15)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::result_type>::~value_or_error(hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::multipoles_type>::result_type> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_array.h(207,2) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/value_or_error.hpp(100,13)
   remark #15382: vectorization support: call to function _ZdlPv cannot be vectorized   [ /usr/include/c++/4.9.0/bits/valarray_array.h(66,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::result_type>::~value_or_error(hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<std::vector<hpx::lcos::future<void>, std::allocator<hpx::lcos::future<void>>>>::result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/value_or_error.hpp(100,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::result_type>::~value_or_error(hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<std::vector<hpx::lcos::shared_future<void>, std::allocator<hpx::lcos::shared_future<void>>>>::result_type> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/value_or_error.hpp(100,13)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>::~bound(hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>> *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/bind.hpp(364,15)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::tree<fmmx_node_type, 3> *>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_this, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<bool>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_regrid<rg_func>, void>::type, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<void, hpx::util::unused_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<xtree::tree<fmmx_node_type, 3>::action_get_new_node, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::delete_<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(93,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::detail::vtable::destruct<hpx::util::decay<boost::disable_if_c<false, hpx::util::detail::bound<void (*)(boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type> *, const boost::system::error_code &, const hpx::parcelset::parcel &), hpx::util::tuple<boost::intrusive_ptr<hpx::lcos::promise<boost::mpl::identity<hpx::naming::id_type>::type, hpx::actions::extract_action<hpx::components::server::create_component_action0<xtree::load_balancer>, void>::remote_result_type>::wrapping_type>, hpx::util::detail::placeholder<1UL>, hpx::util::detail::placeholder<2UL>, void, void, void, void, void>>>::type>::type>(void **)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END

LOOP BEGIN at /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(144,38) inlined into /home/dmarce1/packages/intel64/include/hpx/util/detail/vtable/vtable.hpp(82,23)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/hpx/lcos/local/spinlock.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type, boost::remove_reference<const xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type &>::type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<bool, bool>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type, boost::remove_reference<xtree::tree<fmmx_node_type, 3> *>::type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<fmmx_node_type, hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<fmmx_node_type, hpx::components::managed_component<fmmx_node_type, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type, boost::remove_reference<hpx::util::detail::value_or_error<hpx::lcos::detail::future_data<void>::result_type>::value_type>::type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::id_type, hpx::naming::id_type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<xtree::node_type, hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<xtree::node_type, hpx::components::managed_component<xtree::node_type, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::wrapped_type *>::type, hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_initialize, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<xtree::load_balancer, hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<xtree::load_balancer, hpx::components::managed_component<xtree::load_balancer, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<boost::mpl::identity<xtree::load_balancer *>::type, hpx::actions::extract_action<xtree::load_balancer::action_get_ptr, void>::remote_result_type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::managed_component<hpx::lcos::base_lco_with_value<hpx::naming::gid_type, hpx::naming::gid_type>, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<xtree::tree_type, hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<xtree::tree_type, hpx::components::managed_component<xtree::tree_type, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: hpx::util::reinitializable_static<hpx::components::detail::heap_factory<xtree::silo_output_type, hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type>::heap_type, hpx::components::detail::heap_factory<xtree::silo_output_type, hpx::components::managed_component<xtree::silo_output_type, hpx::components::detail::this_type>::derived_type>::wrapper_heap_tag, 1UL>::destruct()

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/list.tcc(70,7) inlined into /home/dmarce1/packages/intel64/include/hpx/util/reinitializable_static.hpp(78,17)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::clone(boost::exception_detail::refcount_ptr<boost::exception_detail::error_info_container> *, const boost::exception_detail::error_info_container_impl *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(105,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(119,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1216,4) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(159,26)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::release(const boost::exception_detail::error_info_container_impl *) const

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(148,21)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::diagnostic_information(const boost::exception_detail::error_info_container_impl *, const char *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(113,91)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::get(boost::shared_ptr<boost::exception_detail::error_info_base> *, const boost::exception_detail::error_info_container_impl *, const boost::exception_detail::type_info_ &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/typeinfo(116,35) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(94,61)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: boost::exception_detail::error_info_container_impl::set(boost::exception_detail::error_info_container_impl *, const boost::shared_ptr<boost::exception_detail::error_info_base> &, const boost::exception_detail::type_info_ &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/typeinfo(116,35) inlined into /home/dmarce1/packages/intel64/include/boost/exception/info.hpp(87,22)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>::_M_default_append(std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>> *, std::vector<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>, std::allocator<hpx::lcos::promise<boost::mpl::identity<xtree::node<fmmx_node_type, 3>::descend_function<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend_type, {(void (*)())xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::descend, 0L}>::type>::type, hpx::actions::extract_action<hpx::actions::extract_action<xtree::node<fmmx_node_type, 3>::action_descend<dfunc>, void>::type, void>::remote_result_type>>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15382: vectorization support: call to function _ZN3hpx4lcos7promiseI14future_wrapperISt8valarrayIN5xtree9expansionILm5EEEEES8_ED1Ev cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_construct.h(93,7) ]
   remark #15382: vectorization support: call to function (unknown) cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_construct.h(93,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between __first_1325063 line 93 and  line 93
   remark #15346: vector dependence: assumed FLOW dependence between  line 93 and __first_1325063 line 93
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>>::_M_default_append(std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>> *, std::vector<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type, std::allocator<xtree::fmmx::fmmx_node<3UL, 12UL, 5UL>::ascend_type>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::__uninitialized_copy<false>::__uninit_copy<boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer>(boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, boost::io::detail::format_item<char, std::char_traits<char>, std::allocator<char>> *, std::vector<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t, std::allocator<boost::basic_format<char, std::char_traits<char>, std::allocator<char>>::format_item_t>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::vector<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message, std::allocator<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message>>::pointer>(std::vector<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message, std::allocator<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message>>::pointer, std::vector<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message, std::allocator<hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::message>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4)
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
   remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between this_328958 line 293 and this_328958 line 71
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>>::_M_default_append(std::vector<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>> *, std::vector<hpx::lcos::promise<void, hpx::util::unused_type>, std::allocator<hpx::lcos::promise<void, hpx::util::unused_type>>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp(60,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::_M_default_append(std::vector<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>> *, std::vector<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>, std::allocator<std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15382: vectorization support: call to function _ZNSt6vectorIN3hpx6naming7id_typeESaIS2_EEC1Ev cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15382: vectorization support: call to function _ZNSt6vectorIN3hpx6naming7id_typeESaIS2_EEC1Ev cannot be vectorized   [ /usr/include/c++/4.9.0/bits/stl_construct.h(75,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::_M_default_append(std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>> *, std::vector<hpx::naming::id_type, std::allocator<hpx::naming::id_type>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 3.990 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15455: masked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 21 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 3.990 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(514,8) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(573,8)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_type, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type, std::_Select1st<std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::value_type>, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::key_compare, std::map<hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info, std::less<hpx::util::logging::detail::thread_id_type>, std::allocator<std::pair<const hpx::util::logging::detail::thread_id_type, hpx::util::logging::detail::cache_before_init<hpx::util::logging::detail::find_gather_if_default<hpx::util::logging::logger_holder<hpx::util::logger_type>::gather_type>::msg_type>::thread_info>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1545,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1561,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1577,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_range_initialize<boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<boost::iterator_value<boost::range_iterator<std::vector<std::string, std::allocator<std::string>>, void>::type>::type, boost::range_iterator<const char *, void>::type>, boost::algorithm::split_iterator<boost::range_iterator<const char *, void>::type>, boost::use_default, boost::use_default>>(std::vector<std::string, std::allocator<std::string>> *, boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<boost::iterator_value<boost::range_iterator<std::vector<std::string, std::allocator<std::string>>, void>::type>::type, boost::range_iterator<const char *, void>::type>, boost::algorithm::split_iterator<boost::range_iterator<const char *, void>::type>, boost::use_default, boost::use_default> *, boost::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<boost::iterator_value<boost::range_iterator<std::vector<std::string, std::allocator<std::string>>, void>::type>::type, boost::range_iterator<const char *, void>::type>, boost::algorithm::split_iterator<boost::range_iterator<const char *, void>::type>, boost::use_default, boost::use_default> *, std::input_iterator_tag)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/basic_string.h(215,53) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(1268,19)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(1268,6)
      remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.9.0/bits/stl_vector.h(1268,6)
      remark #15382: vectorization support: call to function __atomic_fetch_add_4 cannot be vectorized   [ /usr/include/c++/4.9.0/ext/atomicity.h(49,12) ]
      remark #15382: vectorization support: call to function _ZNSs4_Rep10_M_destroyERKSaIcE cannot be vectorized   [ /usr/include/c++/4.9.0/bits/basic_string.h(249,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between U4f2 line 547 and U4f2 line 249
      remark #15346: vector dependence: assumed FLOW dependence between __first_306759 line 249 and __first_306759 line 547
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1242,7)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(43,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_M_copy(std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_Const_Link_type, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1216,4)
   remark #15526: loop was not vectorized: ASM code cannot be vectorized   [ /home/dmarce1/packages/intel64/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp(59,0) ]
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::_M_get_insert_hint_unique_pos(std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::const_iterator, const std::_Rb_tree<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_type, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type, std::_Select1st<std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::value_type>, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::key_compare, std::map<boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>, std::less<boost::exception_detail::type_info_>, std::allocator<std::pair<const boost::exception_detail::type_info_, boost::shared_ptr<boost::exception_detail::error_info_base>>>>::_Pair_alloc_type>::key_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1545,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1561,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_tree.h(1441,7) inlined into /usr/include/c++/4.9.0/bits/stl_tree.h(1577,38)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END
===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_default_append(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
      remark #15388: vectorization support: reference __first_481249 has aligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.280 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(545,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(559,9)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   <Peeled>
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
      remark #15388: vectorization support: reference __first_481249 has aligned access   [ /usr/include/c++/4.9.0/bits/stl_algobase.h(762,3) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 3 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.280 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.9.0/bits/stl_algobase.h(760,7) inlined into /usr/include/c++/4.9.0/bits/vector.tcc(562,5)
   <Remainder>
   LOOP END
LOOP END
===========================================================================
