
Begin optimization report for: exafmm_kernel<1L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<1L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.450 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::exafmm_kernel(exafmm_kernel<2L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15315: loop was not vectorized: low trip count
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 192.000 
            remark #15478: estimated potential speedup: 0.190 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::exafmm_kernel(exafmm_kernel<2L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15315: loop was not vectorized: low trip count
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 192.000 
            remark #15478: estimated potential speedup: 0.190 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::exafmm_kernel(exafmm_kernel<3L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::exafmm_kernel(exafmm_kernel<3L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::exafmm_kernel(exafmm_kernel<4L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::exafmm_kernel(exafmm_kernel<4L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::exafmm_kernel(exafmm_kernel<5L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::exafmm_kernel(exafmm_kernel<5L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::exafmm_kernel(exafmm_kernel<6L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::exafmm_kernel(exafmm_kernel<6L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::exafmm_kernel(exafmm_kernel<7L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<7L>::exafmm_kernel(exafmm_kernel<7L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::exafmm_kernel(exafmm_kernel<8L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<8L>::exafmm_kernel(exafmm_kernel<8L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::exafmm_kernel(exafmm_kernel<9L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<9L>::exafmm_kernel(exafmm_kernel<9L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(36,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(49,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(50,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(50,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(51,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(52,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(57,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
         remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68

         LOOP BEGIN at ../src/exafmm.cpp(58,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed FLOW dependence between M_r line 68 and M_r line 68
            remark #15346: vector dependence: assumed ANTI dependence between M_r line 68 and M_r line 68
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(83,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(202,2) inlined into ../src/exafmm.cpp(84,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 208 and _M_data line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3) inlined into ../src/exafmm.cpp(84,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 219 and _M_data line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 221 and _M_data line 219
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(85,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
   remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

   LOOP BEGIN at ../src/exafmm.cpp(86,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between F64 line 99 and F64 line 105
      remark #15346: vector dependence: assumed FLOW dependence between _M_data line 105 and _M_data line 99

      LOOP BEGIN at ../src/exafmm.cpp(91,4)
         remark #15310: loop was not vectorized: operation cannot be vectorized   [ ../src/exafmm.cpp(92,28) ]

         LOOP BEGIN at ../src/exafmm.cpp(92,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(100,6) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(100,6) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15458: masked indexed (or gather) loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 12 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 162 
            remark #15477: vector loop cost: 375.500 
            remark #15478: estimated potential speedup: 0.430 
            remark #15479: lightweight vector operations: 248 
            remark #15480: medium-overhead vector operations: 1 
            remark #15487: type converts: 8 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(116,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(163,2) inlined into ../src/exafmm.cpp(117,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 169 and _M_data line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3) inlined into ../src/exafmm.cpp(117,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 180 and _M_data line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 182 and _M_data line 180
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(118,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(119,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(122,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(123,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(134,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 136 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 136
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(163,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 169 and F64 line 182
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 169

   LOOP BEGIN at ../src/exafmm.cpp(177,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 180 and F64 line 182
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 182 and F64 line 180
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(202,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 208 and F64 line 221
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 208

   LOOP BEGIN at ../src/exafmm.cpp(216,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 219 and F64 line 221
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 221 and F64 line 219
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::exafmm_kernel(exafmm_kernel<10L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<10L>::exafmm_kernel(exafmm_kernel<10L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(238,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 239 and _M_elems line 239
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(242,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(243,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(247,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(250,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(253,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(256,4) inlined into ../src/exafmm.cpp(234,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(263,2) inlined into ../src/exafmm.cpp(234,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(264,3) inlined into ../src/exafmm.cpp(234,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

      LOOP BEGIN at ../src/exafmm.cpp(265,4) inlined into ../src/exafmm.cpp(234,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 271 and _M_elems line 271

         LOOP BEGIN at ../src/exafmm.cpp(266,5) inlined into ../src/exafmm.cpp(234,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(271,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(272,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(272,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================
