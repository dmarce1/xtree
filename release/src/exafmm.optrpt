
Begin optimization report for: exafmm_kernel<1L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<1L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(40,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(41,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(42,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(46,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(47,27)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(61,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 67 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 67
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(222,2) inlined into ../src/exafmm.cpp(89,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 227 and _M_data line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 238 and _M_data line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 238
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(90,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(91,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(94,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(95,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(108,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 113 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 113
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(136,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(137,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(138,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(141,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(142,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(153,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 155 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 155
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(183,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 188 and F64 line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 199 and F64 line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 199
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(222,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 227 and F64 line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 238 and F64 line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 238
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::exafmm_kernel(exafmm_kernel<2L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(261,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15315: loop was not vectorized: low trip count
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 192.000 
            remark #15478: estimated potential speedup: 0.190 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<2L>::exafmm_kernel(exafmm_kernel<2L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(261,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5) inlined into ../src/exafmm.cpp(253,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15315: loop was not vectorized: low trip count
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 192.000 
            remark #15478: estimated potential speedup: 0.190 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(40,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(41,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(42,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(46,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(47,27)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(61,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 67 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 67
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(222,2) inlined into ../src/exafmm.cpp(89,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 227 and _M_data line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 238 and _M_data line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 238
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(90,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(91,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(94,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(95,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(108,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 113 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 113
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(136,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(137,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(138,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(141,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(142,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(153,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 155 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 155
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(183,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 188 and F64 line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 199 and F64 line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(222,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 227 and F64 line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 238 and F64 line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 238
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::exafmm_kernel(exafmm_kernel<3L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(257,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 258 and _M_elems line 258
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(261,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<3L>::exafmm_kernel(exafmm_kernel<3L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(257,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 258 and _M_elems line 258
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(261,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5) inlined into ../src/exafmm.cpp(253,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(40,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(41,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(42,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(46,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(47,27)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(61,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 67 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 67
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(222,2) inlined into ../src/exafmm.cpp(89,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 227 and _M_data line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 238 and _M_data line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 238
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(90,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(91,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(94,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(95,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(108,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 113 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 113
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(136,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(137,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(138,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(141,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(142,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(153,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 155 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 155
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(183,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 188 and F64 line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 199 and F64 line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(222,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 227 and F64 line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 238 and F64 line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 238
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::exafmm_kernel(exafmm_kernel<4L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(257,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 258 and _M_elems line 258
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(261,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<4L>::exafmm_kernel(exafmm_kernel<4L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(257,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 258 and _M_elems line 258
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(261,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5) inlined into ../src/exafmm.cpp(253,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.220 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2M(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(39,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(40,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(40,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(41,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(42,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(46,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(47,27)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(61,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 67 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 67
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::M2L(std::valarray<real> &, const std::valarray<real> *, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(88,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(222,2) inlined into ../src/exafmm.cpp(89,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 227 and _M_data line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 238 and _M_data line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 240 and _M_data line 238
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3) inlined into ../src/exafmm.cpp(89,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(90,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(91,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(94,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(95,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(108,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 113 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 113
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::L2L(std::valarray<real> &, const std::valarray<real> &, const std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference _M_data has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(135,2)
<Remainder>
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(183,2) inlined into ../src/exafmm.cpp(136,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 188 and _M_data line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 199 and _M_data line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_data line 201 and _M_data line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3) inlined into ../src/exafmm.cpp(136,2)
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(137,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/exafmm.cpp(138,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/exafmm.cpp(141,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/exafmm.cpp(142,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 1201 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 1201
         LOOP END

         LOOP BEGIN at ../src/exafmm.cpp(153,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between _M_value line 155 and _M_value line 1297
            remark #15346: vector dependence: assumed FLOW dependence between F64 line 1297 and F64 line 155
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::evalMultipole(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(183,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 188 and F64 line 201
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 188

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 199 and F64 line 201
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 201 and F64 line 199
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(196,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::evalLocal(real, real, real, std::valarray<real> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(222,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 227 and F64 line 240
   remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 227

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 238 and F64 line 240
      remark #15346: vector dependence: assumed OUTPUT dependence between F64 line 240 and F64 line 238
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
   LOOP END

   LOOP BEGIN at ../src/exafmm.cpp(235,3)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::exafmm_kernel(exafmm_kernel<5L> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(257,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 258 and _M_elems line 258
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(261,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<5L>::exafmm_kernel(exafmm_kernel<5L> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/exafmm.cpp(257,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between _M_elems line 258 and _M_elems line 258
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(261,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/exafmm.cpp(262,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(266,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(269,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(272,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15399: vectorization support: unroll factor set to 4
         remark #15300: LOOP WAS VECTORIZED
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.350 
         remark #15479: lightweight vector operations: 6 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/exafmm.cpp(275,4) inlined into ../src/exafmm.cpp(253,19)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../src/exafmm.cpp(282,2) inlined into ../src/exafmm.cpp(253,19)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization

   LOOP BEGIN at ../src/exafmm.cpp(283,3) inlined into ../src/exafmm.cpp(253,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
      remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

      LOOP BEGIN at ../src/exafmm.cpp(284,4) inlined into ../src/exafmm.cpp(253,19)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290
         remark #15346: vector dependence: assumed OUTPUT dependence between _M_elems line 290 and _M_elems line 290

         LOOP BEGIN at ../src/exafmm.cpp(285,5) inlined into ../src/exafmm.cpp(253,19)
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ /usr/include/c++/4.9.0/complex(1270,2) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(290,12) ]
            remark #15389: vectorization support: reference _M_elems has unaligned access   [ ../src/exafmm.cpp(291,12) ]
            remark #15381: vectorization support: unaligned access used inside loop body   [ ../src/exafmm.cpp(291,12) ]
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15455: masked aligned unit stride stores: 1 
            remark #15456: masked unaligned unit stride loads: 2 
            remark #15457: masked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 40 
            remark #15477: vector loop cost: 191.000 
            remark #15478: estimated potential speedup: 0.210 
            remark #15479: lightweight vector operations: 110 
            remark #15480: medium-overhead vector operations: 3 
            remark #15481: heavy-overhead vector operations: 3 
            remark #15482: vectorized math library calls: 3 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: exafmm_kernel<6L>::cart2sph(real &, real &, real &, std::valarray<real> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: REVERSED LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 4.510 
   remark #15479: lightweight vector operations: 7 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15388: vectorization support: reference __s.29602 has aligned access   [ /usr/include/c++/4.9.0/bits/valarray_after.h(299,6) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.9.0/bits/valarray_after.h(298,4) inlined into ../src/exafmm.cpp(24,25)
<Remainder>
LOOP END
===========================================================================
